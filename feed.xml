<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Adventures in Business Central</title>
    <description>A Blog by Tine Starič</description>
    <link>https://tine.staric.net/</link>
    <atom:link href="https://tine.staric.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 16 Apr 2024 02:06:58 +0300</pubDate>
    <lastBuildDate>Tue, 16 Apr 2024 02:06:58 +0300</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>Exploring the new Release Wave as a Department - The Blueprint</title>
        <description>&lt;h3 id=&quot;a-new-release-is-on-the-streets-yay&quot;&gt;A new release is on the streets! Yay!&lt;/h3&gt;

&lt;p&gt;I like new stuff, it’s exciting. But a &lt;strong&gt;Release Wave every 6 months&lt;/strong&gt;, even if it’s not the biggest wave, makes it difficult for us as a &lt;em&gt;Business Central&lt;/em&gt; department to &lt;strong&gt;stay up to date&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Usually, it comes down to individuals taking their time to investigate &lt;strong&gt;&lt;em&gt;what’s new&lt;/em&gt;&lt;/strong&gt;, and maybe sharing with a couple of colleagues &lt;em&gt;over a coffee&lt;/em&gt;. But that wasn’t the best approach, as not everyone took the time to look into the release notes, and even if we did, we usually focused on things that &lt;em&gt;sounded&lt;/em&gt; interesting to us. That means, we know what the new topics in &lt;strong&gt;development&lt;/strong&gt; are, but &lt;em&gt;Power Platform? Governance? Reporting? &lt;strong&gt;Eh, not my area…&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Turns out, the longer you ignore &lt;em&gt;“not my area”&lt;/em&gt; topics, the more difficult it becomes to pick them up when a project rolls around that needs to leverage the &lt;em&gt;Power Platform&lt;/em&gt; for example. This wasn’t the best approach, so for this release, we decided to take a &lt;strong&gt;more structured approach&lt;/strong&gt; to how we’re going to stay on top of everything &lt;em&gt;Microsoft&lt;/em&gt; released. And hence, here’s &lt;strong&gt;&lt;em&gt;“The Blueprint”&lt;/em&gt;&lt;/strong&gt; of how we went about it. &lt;em&gt;Is it the best way?&lt;/em&gt; &lt;strong&gt;&lt;em&gt;We don’t know yet.&lt;/em&gt;&lt;/strong&gt; It worked out pretty okay this time, but we’ll know when &lt;strong&gt;future releases start rolling out.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-problems-we-wanted-to-solve&quot;&gt;The problems we wanted to solve:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How do we explore &lt;strong&gt;ALL&lt;/strong&gt; the topics of a new release&lt;/li&gt;
  &lt;li&gt;How do we share the findings with the &lt;strong&gt;whole department&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;How do we ensure that &lt;strong&gt;knowledge is retained&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we could go for &lt;em&gt;Directions for Partners&lt;/em&gt; &lt;a href=&quot;https://community.directions4partners.com/news/1923113&quot;&gt;What’s new webinar&lt;/a&gt; or &lt;em&gt;Companial’s&lt;/em&gt; &lt;a href=&quot;https://companial.com/webinars/microsoft-dynamics-365-business-central-2024-release-wave-1/&quot;&gt;overview of functional and technical enhancements&lt;/a&gt;. But as great of an overview as these two webinars provide, they still &lt;strong&gt;only scratch the surface&lt;/strong&gt;, and as a department we don’t have any &lt;strong&gt;hands-on experience&lt;/strong&gt; with the new topics. So we needed something more.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heres-our-approach&quot;&gt;Here’s our approach&lt;/h3&gt;
&lt;p&gt;We built a team of 6 people, all experienced, but not only seniors, who were tasked with exploring the new release and we broke the &lt;strong&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/release-plan/2024wave1/smb/dynamics365-business-central/planned-features&quot;&gt;release plan&lt;/a&gt;&lt;/strong&gt; down into 6 topics, one for each:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Power Platform&lt;/li&gt;
  &lt;li&gt;Application, Country and Regional, Legislation&lt;/li&gt;
  &lt;li&gt;Copilot and AI innovation&lt;/li&gt;
  &lt;li&gt;Development&lt;/li&gt;
  &lt;li&gt;Governance and administration&lt;/li&gt;
  &lt;li&gt;Reporting and data analysis, user experiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some topics are bigger than others. We approached it in two ways. If an area was too big, someone with a smaller area took some of the topics. The alternative was, that the person with a smaller area went a &lt;strong&gt;release further back&lt;/strong&gt;, to v23 in this case, and explored what was new there. As mentioned at the start, we weren’t exactly thorough with previous releases, so there are plenty of things to &lt;strong&gt;catch up on&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We decided to spend a day off-site to work on our exploration. Nothing fancy, just away from the office. There’s always an email or a bug waiting otherwise. We scheduled it during &lt;em&gt;Microsoft’s&lt;/em&gt; &lt;strong&gt;&lt;a href=&quot;aka.ms/bcle&quot;&gt;Launch Event&lt;/a&gt;&lt;/strong&gt;, primarily because one of the goals each person had was to &lt;strong&gt;come up with at least 3 questions&lt;/strong&gt; to ask during the &lt;strong&gt;Q&amp;amp;A sessions&lt;/strong&gt;. It’s how we ensured that each one has gone &lt;strong&gt;deep enough&lt;/strong&gt; into the topic and also &lt;strong&gt;critically thought about it&lt;/strong&gt;, &lt;em&gt;what’s missing? What’s the future? What could be clearer?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;During the day, the focus was mainly on launch event videos, documentation and hands-on demos. We had a couple of quick catch-ups to present our findings among ourselves and just brainstorm on potential questions we’d like to get answered. The only preparation we did beforehand was for everyone to set up their &lt;strong&gt;cloud sandboxes&lt;/strong&gt; where we demoed the features.&lt;/p&gt;

&lt;p&gt;After our exploration day had ended, we started preparing for a &lt;strong&gt;90-minute Knowledge Sharing session for the whole department&lt;/strong&gt; we held a week later. We wanted each one to have their time slot, instead of one person presenting everything. Partially so everyone could &lt;strong&gt;hone their presentation skills&lt;/strong&gt;, but also so they become the go-to person for their area. Not like &lt;em&gt;the&lt;/em&gt; go-to person, but just &lt;strong&gt;someone who others can now reach out to&lt;/strong&gt; if they have a question in this area.&lt;/p&gt;

&lt;p&gt;This worked out pretty well. We now have a department that is &lt;em&gt;aware&lt;/em&gt; of new features and &lt;strong&gt;6 people who have a deep understanding&lt;/strong&gt; of new release areas. The plan for the next release is to &lt;strong&gt;rotate them&lt;/strong&gt; and get &lt;strong&gt;6 new people&lt;/strong&gt; diving into the &lt;strong&gt;Release Wave 2&lt;/strong&gt;. That way, we’ll slowly upskill more people into &lt;strong&gt;&lt;em&gt;“off-brand” topics&lt;/em&gt;&lt;/strong&gt; like &lt;em&gt;governance&lt;/em&gt; or &lt;em&gt;data analysis&lt;/em&gt;, and additionally, they’ll have people from the first Wave to discuss topics with.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lessons-learned&quot;&gt;Lessons learned&lt;/h3&gt;

&lt;p&gt;Things &lt;em&gt;sound&lt;/em&gt; great so far, but here’s a couple of lessons learned that we’ll try to &lt;strong&gt;address next time&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t expect that people will &lt;strong&gt;catch up on 4 years of release waves in 8 hours&lt;/strong&gt;. Keep investigations contained.&lt;/li&gt;
  &lt;li&gt;People can get caught on a single topic for a full day. &lt;strong&gt;Time box and move on&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Ask &lt;strong&gt;very specific questions&lt;/strong&gt; to Microsoft. &lt;em&gt;“What’s the future of Copilot?”&lt;/em&gt; will get a vague response. They won’t commit to any future plans. But they’ll gladly clarify details of new features.&lt;/li&gt;
  &lt;li&gt;8 hours of research is &lt;strong&gt;draining&lt;/strong&gt;. Remember to take breaks and keep things light.&lt;/li&gt;
  &lt;li&gt;Even a seemingly &lt;strong&gt;small release can easily occupy 6 people&lt;/strong&gt; for a day.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;I know &lt;em&gt;“losing”&lt;/em&gt; 6 people for a day might be a big ask for some partners, but I believe it’s totally worth it. The tasks regarding &lt;em&gt;tenant administration&lt;/em&gt;, or &lt;em&gt;virtual tables&lt;/em&gt; will feel far &lt;strong&gt;less daunting&lt;/strong&gt;, as we now have people who can support us on these &lt;strong&gt;non-traditional work items&lt;/strong&gt;. Also, I can’t speak for the rest of the team, but I found diving into topics &lt;em&gt;“beyond”&lt;/em&gt; BC quite exciting!&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Apr 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/release-wave-blueprint/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/release-wave-blueprint/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>AppSource Transactability - The AL side of the story</title>
        <description>&lt;p&gt;I spent the last few weeks taking another look at the &lt;strong&gt;AppSource transactability&lt;/strong&gt; we got a wave or two ago. The idea is quite neat, we’re not &lt;em&gt;monetization specialists&lt;/em&gt;, we add value by &lt;strong&gt;enhancing the product&lt;/strong&gt;, so why should we bother with a monetization engine, let Microsoft do that for us. &lt;em&gt;Sure, it sounds good&lt;/em&gt;, but the experience was less smooth than I’d like it to be. So here’s a rundown of what you should know before you start your &lt;strong&gt;transition to AppSource transactability&lt;/strong&gt; from a technical perspective.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;a-quick-recap&quot;&gt;A quick recap&lt;/h3&gt;

&lt;p&gt;We’re used to using &lt;strong&gt;license&lt;/strong&gt; (&lt;em&gt;.flf/.bclicense&lt;/em&gt;) files &lt;strong&gt;OnPrem&lt;/strong&gt; to ensure only licensed users can access our range of objects, so even if a user has &lt;strong&gt;SUPER&lt;/strong&gt; permissions, they &lt;strong&gt;won’t be able to access an object&lt;/strong&gt; that’s not in their license.&lt;/p&gt;

&lt;p&gt;But the &lt;strong&gt;Cloud&lt;/strong&gt; doesn’t use license files anymore. That means if a customer installs your app, they have &lt;strong&gt;access to all objects&lt;/strong&gt;, and mind you, even if you have your offer set to »Contact Partner« in AppSource, your app can still be installed on any tenant if you &lt;strong&gt;know the App ID.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Generally, I’ve seen partners take two approaches to solve this. Most of them went with &lt;em&gt;»You can’t really set up and use our apps without our consultants, so go ahead«&lt;/em&gt;, partially because adding some sort of &lt;strong&gt;licensing is overhead&lt;/strong&gt;. The other option was that partners implemented their &lt;strong&gt;own monetization or licensing logic&lt;/strong&gt; that prevented you from using the functionality if you hadn’t bought their license.&lt;/p&gt;

&lt;p&gt;But with AppSource transactability, the overhead is now &lt;strong&gt;taken care by Microsoft&lt;/strong&gt;. Keep in mind that currently &lt;strong&gt;only a per-user plan is supported&lt;/strong&gt;. Each user that wants to have access to your app needs to have a license purchased. If you’re using different pricing models, like &lt;em&gt;per app, per company, per number of invoices, …&lt;/em&gt; you’re currently out of luck. Microsoft says they’ll &lt;em&gt;work on &lt;strong&gt;adding different models&lt;/strong&gt; depending on what the community needs&lt;/em&gt;, but who knows when that will be.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;everything-works-through-entitlements&quot;&gt;Everything works through entitlements&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud&lt;/strong&gt; doesn’t use license files, it &lt;strong&gt;uses entitlements&lt;/strong&gt;, but the logic is still the same. If you don’t have access to an object through entitlements, it &lt;strong&gt;doesn’t matter if you have SUPER permissions&lt;/strong&gt;. This picture illustrates it well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-vs-permission.png&quot; alt=&quot;Entitlements vs. Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Without the necessary entitlement&lt;/strong&gt;, the user won’t see the pages of your app and &lt;strong&gt;won’t have permission&lt;/strong&gt; to manipulate the data. So let’s start with the entitlement object. The base and system apps define several different entitlements. But for us, we should pay attention to the following 4 types:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PerOfferUserPlan&lt;/li&gt;
  &lt;li&gt;Role - Delegated&lt;/li&gt;
  &lt;li&gt;ApplicationScope – API.ReadWrite.All&lt;/li&gt;
  &lt;li&gt;Unlicensed&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;perofferuserplan&quot;&gt;PerOfferUserPlan&lt;/h3&gt;

&lt;p&gt;This is the main entitlement type for monetization, it &lt;strong&gt;maps to the license&lt;/strong&gt; users will buy through AppSource.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-gold.png&quot; alt=&quot;Gold Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Id&lt;/strong&gt; in this case is the &lt;strong&gt;ServiceId&lt;/strong&gt; of the offer plan you create when creating the AppSource &lt;strong&gt;submission&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/offer-plan-service-id.png&quot; alt=&quot;Entitlements vs. Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ObjectEntitlements&lt;/strong&gt; is where you &lt;strong&gt;map a permission set to an entitlement&lt;/strong&gt;. This is how an entitlement defines the &lt;strong&gt;maximum permissions&lt;/strong&gt; that can be assigned to a user holding this entitlement.&lt;/p&gt;

&lt;p&gt;You can have &lt;strong&gt;multiple PerUserOfferPlans&lt;/strong&gt; if you want to implement different license levels (&lt;em&gt;bronze, silver, gold&lt;/em&gt;). Each of the lower plans would have a more restrictive permissions set attached to an entitlement, and that’s how you’d &lt;strong&gt;control the level of access&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;delegated-admin-entitlements&quot;&gt;Delegated Admin entitlements&lt;/h3&gt;

&lt;p&gt;You &lt;strong&gt;don’t have to implement these&lt;/strong&gt; entitlements, but without them, the &lt;strong&gt;delegated admin users won’t have access&lt;/strong&gt; to your application objects and won’t be able to troubleshoot customers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-admin.png&quot; alt=&quot;Delegated Admin Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;4 different delegated admin roles&lt;/strong&gt; currently available for BC:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Delegated Admin Agent - &lt;em&gt;00000000-0000-0000-0000-000000000007&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Delegated Helpdesk Agent - &lt;em&gt;00000000-0000-0000-0000-000000000008&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Dynamics 365 Agent - &lt;em&gt;00000000-0000-0000-0000-000000000009&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Delegated BC Admin Agent - &lt;em&gt;00000000-0000-0000-0000-000000000010&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;IDs have to be exactly as specified above&lt;/strong&gt;, which relate to the actual role in Entra ID. My preference is to give all delegated roles full permissions, so they can access and troubleshoot any part of the application. You can however make it more restrictive by assigning a different permission set.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;applicationscope--apireadwriteall&quot;&gt;ApplicationScope – API.ReadWrite.All&lt;/h3&gt;

&lt;p&gt;This is the entitlement that gets assigned to the &lt;strong&gt;S2S API sessions with the API.ReadWrite.All Scope&lt;/strong&gt;. If an external application is integrating with Business Central using user impersonation/delegation authentication, the entitlements/permissions of the &lt;strong&gt;impersonated users apply&lt;/strong&gt;. Nothing special there. However, if the client is using &lt;strong&gt;Service-2-Service (S2S) authentication&lt;/strong&gt;, The following entitlement is assigned to it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-api.png&quot; alt=&quot;API Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;permissions for the S2S applications&lt;/strong&gt; are managed on the &lt;strong&gt;Microsoft Entra Applications&lt;/strong&gt; page, but they follow the same rules as users. If the client &lt;strong&gt;doesn’t have entitlements&lt;/strong&gt; for an object, it doesn’t matter if it has SUPER permissions, the &lt;strong&gt;access is not granted&lt;/strong&gt;. So if your app is exposing any APIs and you want to support S2S, you should include this entitlement object and give it sufficient access, otherwise, a simple Ping API starts throwing permission errors:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/ping-api.png&quot; alt=&quot;Ping API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-api-error.png&quot; alt=&quot;API Entitlement Error&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;unlicensed-entitlement&quot;&gt;Unlicensed Entitlement&lt;/h3&gt;

&lt;p&gt;This is the entitlement object that gets &lt;strong&gt;assigned if no others match&lt;/strong&gt;, meaning if the user doesn’t have a PerUserOfferPlan license, is not a delegated admin (or delegated admin entitlements are not defined), or is an S2S authenticated client and ApplicationScope entitlement isn’t defined.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-unlicensed.png&quot; alt=&quot;Unlicensed Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is primarily used for &lt;strong&gt;side-by-side&lt;/strong&gt; functionality, meaning, when you &lt;strong&gt;already have your monetization solution&lt;/strong&gt;, and you want to &lt;strong&gt;move to AppSource monetization&lt;/strong&gt; without causing any issues for your existing customers.&lt;/p&gt;

&lt;p&gt;As soon as you &lt;strong&gt;define a single entitlement object&lt;/strong&gt; in your code base and publish that version to AppSource, the &lt;strong&gt;entitlement check starts being enforced&lt;/strong&gt;. So if you define a PerUserOfferPlan and release a new version, &lt;strong&gt;all existing customers&lt;/strong&gt; that update the app &lt;strong&gt;won’t be able to use your app&lt;/strong&gt; anymore until they buy appropriate licenses through AppSource. This can be annoying, especially if they’ve already purchased a license through your own monetization model. Hence we implement a &lt;strong&gt;side-by-side solution&lt;/strong&gt;, that will &lt;strong&gt;allow customers to use the app normally while they’re transitioning&lt;/strong&gt; to the MS monetization model. More on the side-by-side in the next section.&lt;/p&gt;

&lt;p&gt;If you have existing customers, the unlicensed entitlement should give all the access that the existing customers need (usually all available permissions). If you’re &lt;strong&gt;creating a new app&lt;/strong&gt; without any existing customers, you can &lt;strong&gt;skip the unlicensed entitlement&lt;/strong&gt; altogether.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;side-by-side&quot;&gt;Side-by-Side&lt;/h3&gt;

&lt;p&gt;If you went down the route of creating your own monetization engine, you probably found &lt;strong&gt;key areas&lt;/strong&gt; of your functionality and implemented a &lt;strong&gt;license check&lt;/strong&gt; in those points. I common approach is to subscribe to the OnBeforeInsertEvent of a key table and check if the app is licensed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/license-check.png&quot; alt=&quot;Check for license on Insert of a Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If this was your approach, you now have to &lt;strong&gt;wrap these checkers in IsUnlicensed checks&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/license-check-isunlicensed.png&quot; alt=&quot;Check for license on Insert of a Table with IsUnlicensed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If a user has &lt;strong&gt;purchased a license through AppSource&lt;/strong&gt;, they will have the corresponding &lt;strong&gt;entitlement assigned&lt;/strong&gt; and the code will &lt;strong&gt;skip the license check&lt;/strong&gt;. If they haven’t, they get the &lt;strong&gt;Unlicensed entitlement&lt;/strong&gt; assigned and the code will &lt;strong&gt;check with your monetization engine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;IsUnlicensed will return true if a user has &lt;strong&gt;any other entitlement from the current app assigned&lt;/strong&gt;. If you’re planning to implement &lt;strong&gt;multiple access levels&lt;/strong&gt; like &lt;em&gt;Gold, Silver, or Bronze&lt;/em&gt;, you might sometimes want to direct your code flow in a direction only if the user has the appropriate entitlement level assigned. You can do that using the &lt;strong&gt;IsEntitled&lt;/strong&gt; function. The name of the entitlement to check is the &lt;strong&gt;entitlement object name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-check.png&quot; alt=&quot;Check for a specific entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The important thing to note here is that &lt;strong&gt;entitlements are completely ignored OnPrem&lt;/strong&gt; and &lt;strong&gt;IsUnlicensed or IsEntitled will always return false&lt;/strong&gt;. So if you have any &lt;strong&gt;automated tests&lt;/strong&gt; ensuring your monetization approach works, those &lt;strong&gt;won’t work&lt;/strong&gt;. I’ve asked Microsoft what to do in this case, and they’re &lt;em&gt;discussing it&lt;/em&gt;. Until they come up with an approach, it’s best to wrap the IsUnlicensed in an interface so that we can &lt;strong&gt;mock it in tests&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;cross-app-entitlement-check&quot;&gt;Cross-app entitlement check&lt;/h3&gt;

&lt;p&gt;The final aspect of entitlements that we’ll take a look at is &lt;strong&gt;checking for entitlements of a different app&lt;/strong&gt;. A scenario when you’d want this is if, for example, you’re offering three apps, &lt;strong&gt;App A, App B, and App C&lt;/strong&gt;. They’re all standalone apps that work independently, however you want to give the users of App A the other two apps for free. If App B and C are &lt;strong&gt;only checking for their own entitlements&lt;/strong&gt;, a user would need to &lt;strong&gt;purchase three licenses&lt;/strong&gt;. However, if we implement a &lt;strong&gt;cross-app check&lt;/strong&gt;, we can ensure that users with licenses for App A, also have access to the other two apps.
So if we refactor the above example&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-check-manager.png&quot; alt=&quot;Check for a specific entitlement with an Entitlement Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s say this DownloadEntries procedure is in App C. This is how the entitlement manager would look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-manager.png&quot; alt=&quot;Check for entitlements across apps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We check for either a Gold entitlement &lt;strong&gt;in App C&lt;/strong&gt;, or a Gold entitlement &lt;strong&gt;in App A&lt;/strong&gt; and either entitlement is enough for the check to pass. The next logical step here would now be to &lt;strong&gt;move the entitlement manager to a separate app&lt;/strong&gt;, so we can manage all these app relationship combinations in a &lt;strong&gt;central place&lt;/strong&gt;. But this was a quick example of how we can check if a user has an entitlement for a different app. The same applies to the IsUnlicensed function, it too can take a GUID parameter and we can check if a user has the Unlicensed entitlement for a different app.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, this brings us to the end. I know this was quite a read, but as I was researching the topic of entitlements there were just &lt;strong&gt;so many pieces missing&lt;/strong&gt; in the official documentation. I tried opening issues for it, I tried creating PRs to adjust the information, but there was no response from maintainers, so I decided to package all this information in a blog post. Partially for myself, for the next time, I have to deal with entitlements, but also for anyone else going down the same route.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Apr 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/transactability-entitlements/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/transactability-entitlements/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Curious case of Insert Lock Timeouts</title>
        <description>&lt;p&gt;I’ve been a BC dev for a while now. It’s been a learning experience through and through. But there was always an area that I kept pushing away. &lt;strong&gt;SQL&lt;/strong&gt;. I don’t really know why, I never had issues with it, so I guess in my mind I just pushed it away as unimportant. It sat in some distant pile with &lt;em&gt;permissions, tooltips, and translations&lt;/em&gt; — &lt;strong&gt;&lt;em&gt;my afterthought pile.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This meant I never really understood &lt;strong&gt;indexes, database locks, or SIFTs&lt;/strong&gt;. And I didn’t need to. There are &lt;strong&gt;no locking issues&lt;/strong&gt; when you’re testing with &lt;strong&gt;just one user&lt;/strong&gt;. Well fast forward a few years, and that all had to change.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For the better part of last year, I was working on a project where we were trying to analyze the &lt;strong&gt;performance of a huge monolithic app&lt;/strong&gt; (3k+ objects). There were many sides we tried attacking the problem from, AL Profiler, Telemetry, BCPT,… Ultimately, we decided that our first focus should be on &lt;strong&gt;removing locks&lt;/strong&gt; as the app is planned to be used by &lt;strong&gt;100+ concurrent users&lt;/strong&gt; and a ton of background services.&lt;/p&gt;

&lt;p&gt;We set up &lt;strong&gt;BCPT tests&lt;/strong&gt;, start running them, and find our first batch of &lt;strong&gt;deadlocks&lt;/strong&gt; and &lt;strong&gt;lock timeouts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time to figure out how locks work.&lt;/em&gt; I knew we got &lt;strong&gt;ReadIsolation&lt;/strong&gt; a while ago that supposedly helps with locks. I came across a couple of brilliant blog posts by &lt;a href=&quot;https://www.linkedin.com/in/alexander-drogin-0635422b/&quot;&gt;Alexander Drogin&lt;/a&gt;. They helped me understand what locks are and how read isolation changes them. That’s &lt;strong&gt;not what I’m going to focus on here&lt;/strong&gt;, but if you’re interested in that, here are the links: &lt;a href=&quot;https://www.keytogoodcode.com/post/transaction-isolation-in-business-central&quot;&gt;Transaction Isolation in Business Central&lt;/a&gt;, &lt;a href=&quot;https://www.keytogoodcode.com/post/readcommitted-isolation-in-azure-sql&quot;&gt;ReadCommitted Isolation in Azure SQL&lt;/a&gt;, &lt;a href=&quot;https://www.keytogoodcode.com/post/read-committed-snapshot-isolation-and-the-write-skew-anomaly&quot;&gt;ReadCommittedSnapshotIsolation and the Write Skew Anomaly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some changes to &lt;em&gt;read isolation&lt;/em&gt;, some &lt;em&gt;missing filters added&lt;/em&gt; and some &lt;em&gt;write transactions started later in the process&lt;/em&gt;, and we made our first progress. No locks on 100 concurrent users! Okay, add another scenario, rinse, and repeat.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Everything seemed fine for a while until we added 5 or 6 scenarios to run concurrently. Then something extremely weird started happening. We got &lt;strong&gt;lock timeouts&lt;/strong&gt;, but not on reads but &lt;strong&gt;on writes&lt;/strong&gt;. That broke my mind. &lt;strong&gt;How am I blocked from inserting a record?&lt;/strong&gt; I’d get modify, but insert? How can a different transaction meddle with inserts?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/error-list.png&quot; alt=&quot;List of lock timeout errors&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“We can’t save your changes right now, because a record in table ‘Simple Entry’ is being updated in a transaction done by another session. You’ll have to wait until the other transaction has completed, which may take a while. Please try again later.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is where the call stack breaks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/callstack-break.png&quot; alt=&quot;Call Stack Break Point&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you’re probably thinking &lt;em&gt;“Ha! You must have some weird logic on OnInsert trigger or a subscriber!”&lt;/em&gt;. Yeah, I thought that too. I removed &lt;strong&gt;all trigger, all subscribers, all global database subscribers&lt;/strong&gt;, and nothing, still the same issue…&lt;/p&gt;

&lt;p&gt;The answer was staring me &lt;em&gt;right in the face&lt;/em&gt;. Here’s how the &lt;strong&gt;locks look after an insert&lt;/strong&gt; to my SimpleEntry table.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/active-locks.png&quot; alt=&quot;Active Locks After Insert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Due to my lack of knowledge of &lt;strong&gt;what is SIFT&lt;/strong&gt; and how it works, my mind dismissed it as &lt;em&gt;“huh, that’s odd, anyway, moving on.”&lt;/em&gt;. But seeing the locks enough times, I decided maybe it finally is time to properly learn about SIFT.&lt;/p&gt;

&lt;p&gt;If you’re comfortable with understanding SIFT, feel free to skip to the section about SIFT Locks where we continue the lock story. For everyone else, let’s take a detour, and understand &lt;strong&gt;what SIFTs are&lt;/strong&gt; first.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;sift-in-a-nutshell&quot;&gt;SIFT in a nutshell&lt;/h3&gt;

&lt;p&gt;SIFT stands for &lt;strong&gt;SumIndexField Technology&lt;/strong&gt;. The &lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-sift-technology&quot;&gt;documentation&lt;/a&gt; could honestly do a better job of explaining the concept. Here’s how it works:&lt;/p&gt;

&lt;p&gt;Imagine we have a simple table, like our &lt;strong&gt;SimpleEntry&lt;/strong&gt; table. Nothing special, a primary key, a couple of fields, that’s it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/simple-entry-table.png&quot; alt=&quot;Simple Entry Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And say we have some data in there:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/simple-entry-data.png&quot; alt=&quot;Simple Entry Data&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s say we want to figure out the total amount of sales entries. We’d do something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/sum-sales-org.png&quot; alt=&quot;Sum Sales Procedure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Or also common, something like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/flowfield.png&quot; alt=&quot;Sales Amount FlowField&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In both cases, the SQL server goes through all lines of type sales and starts calculating &lt;em&gt;125 + 642 + … = &lt;strong&gt;1491!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But if you define &lt;strong&gt;SumIndexFields&lt;/strong&gt; on a particular key like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/sift-on-key.png&quot; alt=&quot;SIFT on Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The SQL server will start maintaining something called an &lt;strong&gt;Indexed View&lt;/strong&gt;. You can think of it as another table, where sums for this key are stored. For our example, it would look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view.png&quot; alt=&quot;Indexed View Data&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every time an &lt;strong&gt;entry is added or modified in the SimpleEntry table, the sum in this &lt;em&gt;“table”&lt;/em&gt; is updated as well&lt;/strong&gt;. This means that the next time you ask for a &lt;strong&gt;total amount of Sale type&lt;/strong&gt; entries, the SQL server can just go &lt;strong&gt;&lt;em&gt;“1491!”&lt;/em&gt;&lt;/strong&gt; without looping through each record.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;turns-out-sift-is-the-culprit&quot;&gt;Turns out SIFT is the culprit!&lt;/h3&gt;
&lt;p&gt;We mentioned that if &lt;strong&gt;SQL maintains an indexed view&lt;/strong&gt;, it has to &lt;strong&gt;update that view for each change in the underlying table&lt;/strong&gt;. That means, that if I &lt;strong&gt;insert a new record&lt;/strong&gt; into my SimpleEntry table, &lt;strong&gt;two rows become locked&lt;/strong&gt;; the newly created entry record, and the row in the indexed view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view-lock.png&quot; alt=&quot;Indexed View Locks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And the lock is held for the &lt;strong&gt;duration of the transaction&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If a &lt;strong&gt;separate transaction&lt;/strong&gt; tries to &lt;strong&gt;add a record of type Sale&lt;/strong&gt; to the entry table, that in itself shouldn’t be a problem for the SimpleEntry table. However, as that insert needs to also update the Indexed View, it will have to &lt;strong&gt;wait until the first transaction releases the lock on it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A record of type &lt;strong&gt;Purchase&lt;/strong&gt; however will have &lt;strong&gt;no issues&lt;/strong&gt;, as it doesn’t need the Sale row in the indexed view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view-purchase.png&quot; alt=&quot;Indexed View Purchase&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When these transactions pile up, as they do when you have &lt;strong&gt;100 concurrent users&lt;/strong&gt;, you quickly reach the &lt;strong&gt;10-second limit&lt;/strong&gt; at which point the waiting transaction &lt;strong&gt;times out&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And that’s not the only side that can cause issues. Remember, anytime we &lt;strong&gt;lock the related row&lt;/strong&gt; in the indexed view, we &lt;strong&gt;can’t insert a record&lt;/strong&gt; in the entry table with a matching index value. The two examples above that make use of indexed views, the &lt;em&gt;SumSales&lt;/em&gt; procedure and the &lt;em&gt;SalesAmount&lt;/em&gt; flow field, are both &lt;strong&gt;reading the indexed view&lt;/strong&gt;. So if they read it with &lt;strong&gt;UpdLock&lt;/strong&gt;, which is the default locking type, after you start a write transaction, you’re going to &lt;strong&gt;have a problem&lt;/strong&gt;. That is until &lt;strong&gt;tri-state locking&lt;/strong&gt; becomes the default. You can read what &lt;a href=&quot;https://www.linkedin.com/in/duilio-tacconi-4042999a&quot;&gt;Duilio Tacconi&lt;/a&gt; wrote &lt;a href=&quot;https://duiliotacconi.com/2023/11/23/461/&quot;&gt;about it&lt;/a&gt; if you’d like to know more.&lt;/p&gt;

&lt;p&gt;But until we have tri-state locking, both of these examples will effectively &lt;strong&gt;lock the row in our indexed view&lt;/strong&gt;, and while the locks are held, &lt;strong&gt;inserts will have to wait&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/update-and-lock-sum-sales.png&quot; alt=&quot;Update and Lock - Sum Sales&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/update-and-lock-flowfield.png&quot; alt=&quot;Update and Lock - FlowField&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yes, &lt;strong&gt;flow fields also lock rows&lt;/strong&gt;. They lock them with the &lt;strong&gt;same lock type as the parent table&lt;/strong&gt;. So in the above example, if I’d set the IsolationLevel on the Customer to ReadUncommited, then the flow field would apply this hint as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;so-what-should-we-do-about-it&quot;&gt;So what should we do about it?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Should we stop using SIFT?&lt;/em&gt; &lt;strong&gt;No!&lt;/strong&gt; Well, maybe. Sometimes. It depends. There are a couple of different approaches we took to resolve our insert lockouts.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Lower read isolation&lt;/strong&gt; on reads that were reading the indexed view with &lt;strong&gt;UpdLock&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Keep the table as is, change the logic of the process so it &lt;strong&gt;inserts in the TempTable&lt;/strong&gt; first, and only inserts in the actual table at the very end, &lt;strong&gt;holding locks for a minimal time&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Run the processes &lt;strong&gt;asynchronously&lt;/strong&gt; through a job queue entry&lt;/li&gt;
  &lt;li&gt;Switch user inserts to a staging table that’s &lt;strong&gt;optimized for inserting&lt;/strong&gt; and have a job transfer data to &lt;strong&gt;read optimized tables&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remove SumIndexFields&lt;/strong&gt; and accept the read performance penalty&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s another one, that we haven’t tried. Just the other day, I was watching &lt;a href=&quot;https://www.linkedin.com/in/ericwauters&quot;&gt;Waldo’s&lt;/a&gt; &lt;a href=&quot;https://youtu.be/E3ADZsisFbE?si=mPtH-c2A8hO0sYhA&amp;amp;t=1003&quot;&gt;Coding 4 Performance&lt;/a&gt; session from &lt;a href=&quot;https://www.bctechdays.com/event&quot;&gt;BC Tech Days&lt;/a&gt; where he mentions &lt;strong&gt;IncludedFields&lt;/strong&gt; as an alternative to SIFT. That’s another option to look into.&lt;/p&gt;

&lt;p&gt;As you see, it’s not a simple answer, there are different options, all coming with their own &lt;strong&gt;set of tradeoffs&lt;/strong&gt;, but at least I hope the next time you experience issues with &lt;strong&gt;locks on inserts&lt;/strong&gt;, you’ll know where to look.&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Mar 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/insert-lock-timeouts/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/insert-lock-timeouts/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Reference Parameters - var does matter</title>
        <description>&lt;p&gt;I previously posted about &lt;a href=&quot;https://tine.staric.net/blog/2024/3-pitfalls-of-var-parameters/&quot;&gt;Pitfalls of var parameters&lt;/a&gt; and how things can go sideways if we’re not careful when using them.&lt;/p&gt;

&lt;p&gt;What I wrote there in regards to marking &lt;em&gt;reference&lt;/em&gt; parameters with var was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Var modifiers don’t make a difference, but you should still use them to signal the intentionality of your procedure. If the procedure intends to modify the parameter, add a var in front of it, if it’s only reading data, skip it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, what I wrote there still holds, regardless of using var with a reference data type parameter we’re able to make changes to it and those changes are reflected outside our local procedure. But thanks to &lt;a href=&quot;https://www.linkedin.com/in/ajkauffmann&quot;&gt;Arend-Jan Kauffmann&lt;/a&gt; for pointing out, that that &lt;strong&gt;wasn’t the full truth&lt;/strong&gt;. Marking a reference parameter with a var or not &lt;strong&gt;actually does play a role&lt;/strong&gt;, and this post is about clarifying how and why it’s important we think about it in our &lt;strong&gt;event-driven world of extensions&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;tl/dr&lt;/h3&gt;
&lt;p&gt;When we’re passing a reference type parameter to a procedure &lt;strong&gt;without var&lt;/strong&gt;, we’re passing the &lt;strong&gt;reference&lt;/strong&gt; by value. The procedure can make all the changes to the instance it points to, however, it &lt;strong&gt;cannot change the reference so it would point to a different instance&lt;/strong&gt;. When passing the parameter &lt;strong&gt;with var&lt;/strong&gt;, we can &lt;strong&gt;also change the reference&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, now that that’s out of the way, let’s go through this again, but with an example or two, to make this a bit easier to understand.
Let’s take the same List example as last time. We know that &lt;strong&gt;both of these result in the same outcome&lt;/strong&gt;. In both cases, &lt;strong&gt;var or no var&lt;/strong&gt;, we end up with a list with &lt;strong&gt;2 items&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-add-no-var.png&quot; alt=&quot;Add to List - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-add-var.png&quot; alt=&quot;Add to List - var&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s make these examples weirder, so we can see where &lt;strong&gt;var&lt;/strong&gt; starts making a difference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-change-reference-no-var.png&quot; alt=&quot;Change List Reference - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What do you think the count is going to be here? &lt;em&gt;1? 2? 3?&lt;/em&gt; Well, let’s see…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-change-reference-no-var-count.png&quot; alt=&quot;Change List Reference - Count - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s one.&lt;/strong&gt; Before we explain again what’s happening, let’s take a look at the same example if the list parameter is marked with var:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-change-reference-var.png&quot; alt=&quot;Change List Reference - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/ref-param-list-change-reference-var-count.png&quot; alt=&quot;Change List Reference - Count - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This time the result is more along the lines of what we’d expect. &lt;em&gt;So why this difference in behavior?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When passing a reference type, something like a list, we’re &lt;strong&gt;not passing an actual list&lt;/strong&gt;, but only a &lt;strong&gt;reference to that list&lt;/strong&gt;. &lt;em&gt;A pointer, a location.&lt;/em&gt; Similar to having a piece of paper where the address of a house is written on. When passing it to a procedure, you’re not passing the whole house, just this &lt;em&gt;piece of paper&lt;/em&gt; with the address. So when we’re talking about passing it by reference (with var) or by value (without var), we’re talking about passing the &lt;strong&gt;reference&lt;/strong&gt; by value or by reference. In our case, this piece of paper with the address. In both cases, someone can go to the house and &lt;strong&gt;put something in&lt;/strong&gt; the house, or &lt;strong&gt;take something out&lt;/strong&gt; of it. However, if we give them the address by value (without var), we’re saying, &lt;em&gt;you can find the house here, do what you want in the house, but you &lt;strong&gt;can’t change the address&lt;/strong&gt; on this paper.&lt;/em&gt; When we pass it by reference (with var), they can also &lt;strong&gt;change the address&lt;/strong&gt; so it points to a &lt;strong&gt;different house altogether&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And that’s what’s happening in our list example above. We got the &lt;em&gt;address&lt;/em&gt; to our List (MyList), but then we created a &lt;strong&gt;completely new list&lt;/strong&gt; (MyList2) and tried saying, &lt;em&gt;“Hey, MyList address should now point to this new list”&lt;/em&gt;. When the parameter is passed without var, we &lt;strong&gt;cannot do that&lt;/strong&gt;, hence, when the procedure finishes, MyList still &lt;strong&gt;points to the original List&lt;/strong&gt; with only 1 item (“Hello”).&lt;/p&gt;

&lt;p&gt;In the second example, because MyList is &lt;strong&gt;passed with var&lt;/strong&gt;, we can change it, so that it &lt;strong&gt;points to the new List&lt;/strong&gt;, MyList2.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;“Okay Tine, fine, I get it, but so what? I mean, who in their right mind goes and creates a new list, if they get one passed in as a parameter…”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yeah, fair point. But keep in mind, that any procedure that &lt;strong&gt;returns a list&lt;/strong&gt; actually &lt;strong&gt;creates a new instance&lt;/strong&gt;. So it’s not that uncommon.&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-invoice-change-reference-no-var.png&quot; alt=&quot;Assign Invoices - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above example &lt;strong&gt;won’t work&lt;/strong&gt;, but it will if the parameter is marked with var:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-invoice-change-reference-var.png&quot; alt=&quot;Assign Invoices - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so will this:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-invoice-add.png&quot; alt=&quot;Assign Invoices - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Fine, be mindful of how you assign to lists. Why don’t I just &lt;strong&gt;always mark reference parameters with var&lt;/strong&gt;? One less thing to worry about…”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad idea.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Especially when you work with events. Let me give you an example with a reference type that will make it more obvious:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-interface-main.png&quot; alt=&quot;Interface - Main&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have a simple procedure that sets a value, exposes the interface through an event, and then gets the value. Let’s take a look at the interface implementation:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-interface-normal.png&quot; alt=&quot;Interface Implementation - Normal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Simple, right?&lt;/em&gt; One procedure sets the value, and the other reads it. So let’s turn our attention to the event over there. If we expose the interface &lt;strong&gt;by value&lt;/strong&gt;, subscribers can &lt;strong&gt;only access the procedures of that interface&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-interface-event-no-var.png&quot; alt=&quot;Interface Event - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, if you expose it &lt;strong&gt;by reference&lt;/strong&gt;, a subscriber can also &lt;strong&gt;change the implementation&lt;/strong&gt; that the interface is referencing:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-interface-event-var.png&quot; alt=&quot;Interface Event - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that can lead to &lt;strong&gt;unpredictable behavior&lt;/strong&gt; for your app, especially if the new implementation does something stupid like:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/ref-param-interface-wild.png&quot; alt=&quot;Interface Implementation - Wild&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But hey, maybe that’s exactly &lt;strong&gt;what you wanted&lt;/strong&gt;. The option for subscribers to &lt;strong&gt;change the implementation&lt;/strong&gt; interface points to. So there’s no &lt;em&gt;always right&lt;/em&gt; or &lt;em&gt;always wrong&lt;/em&gt; answer here.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now, in summary, &lt;em&gt;should you use var with reference parameters? or should you not?&lt;/em&gt; It comes down to the usual &lt;strong&gt;“It depends”&lt;/strong&gt;. What I’m hoping to achieve with this blog is for us to &lt;strong&gt;be mindful that there is a difference&lt;/strong&gt; and you should think about &lt;em&gt;“Do I want the procedure to only modify the instance of a variable, or should I let it change the reference to a completely different instance?”&lt;/em&gt; and that we don’t just &lt;strong&gt;blindly mark or not mark parameters with var&lt;/strong&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 26 Feb 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/reference-parameters-var-does-matter/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/reference-parameters-var-does-matter/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>My MB-820 Experience and why you shouldn&apos;t worry (that much)</title>
        <description>&lt;p&gt;Last Friday I took the &lt;strong&gt;MB-820&lt;/strong&gt;. I wanted to do it as soon as possible. I guess I wanted to prove to myself that the years spent working as a developer were enough preparation to pass this certification.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Did I pass? I don’t know.&lt;/em&gt; More on that later.&lt;/p&gt;

&lt;p&gt;But as I was sharing my experience with my colleagues who are planning to take it as well, I realized a lot of worries come from &lt;strong&gt;not knowing how the exam process works&lt;/strong&gt;. The point of this post is not to leak questions, I don’t think there’s a point in memorizing questions. It’s more about explaining the process, how you take the exam, what can you expect, and what style of questions can you expect.&lt;/p&gt;

&lt;p&gt;If you’ve taken any other MS exam, you’ll already know most of these things. But I believe for a lot of BC Developers, this will be the first certification they’ll attempt.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;remember&quot;&gt;Remember!&lt;/h3&gt;
&lt;p&gt;I’ll repeat this at the end, but my takeaway is, that an experienced developer, that worked on a wider set of projects &lt;strong&gt;should be able to pass this exam with a few days of preparation&lt;/strong&gt;. So go over some areas you’re uncertain about, and most importantly, &lt;strong&gt;trust yourself&lt;/strong&gt;. You’ve done most of the things they’re asking you about, now you just have to &lt;strong&gt;show it to them&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exam-environment&quot;&gt;Exam Environment&lt;/h3&gt;

&lt;p&gt;You’ll take the exam through Pearson VUE. You can either take it &lt;strong&gt;in-person&lt;/strong&gt; or &lt;strong&gt;online&lt;/strong&gt;. I tried both. I took the MB-800 in person, and MB-820 online. The experience is more or less the same. The in-person option did make me less worried about anything going wrong during the exam, but Online allows much more flexibility around when you can take the exam.&lt;/p&gt;

&lt;p&gt;To take the exam online, you’ll download an app from their site and you’ll have to ensure that the room you’re in has no distracting factors (monitors and TVs need to be off, no books, anything that could be considered “cheating”). You’ll have to take pictures of the front, back, and sides of your exam area. Don’t worry, &lt;strong&gt;the app guides you through everything&lt;/strong&gt;. Additionally, your PC shouldn’t be running any additional apps. You can read more about it &lt;a href=&quot;https://learn.microsoft.com/en-us/credentials/certifications/online-exams&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exam-style&quot;&gt;Exam Style&lt;/h3&gt;
&lt;p&gt;When you start the exam, you’ll have all the exam rules written out, take your time to read them, this doesn’t take away from your exam time yet. Once the actual exam starts, you’ll have &lt;strong&gt;2 hours to finish it&lt;/strong&gt;. My take was, that 2 hours is &lt;strong&gt;enough time&lt;/strong&gt;, to comfortably go through all questions and return to the ones I found iffy.&lt;/p&gt;

&lt;p&gt;The exam has &lt;strong&gt;3 sections of questions&lt;/strong&gt;. Within each section, you can always move back and forth between questions. So if you’re unsure about some, you can move forward to the next one, and return to it later. However, &lt;strong&gt;once you leave a section, you will not be able to return to it anymore&lt;/strong&gt;. The app lets you know of that, so don’t worry about accidentally leaving a section.&lt;/p&gt;

&lt;p&gt;In my case, the sections were split into 8/6/42 questions, but this might change, the exam is in Beta after all. The first two sections were more scenario-based. &lt;em&gt;“The customer calls in with this and that problem, what do you do?”&lt;/em&gt;. The last section was more “to the point”, you have a snippet of code, what you have to change, or what property you use for this and that purpose.&lt;/p&gt;

&lt;p&gt;Now you might think &lt;em&gt;“Ugh, are we really going to get questions that we could easily google?!”&lt;/em&gt;. Yes, yes we will.&lt;/p&gt;

&lt;p&gt;However, a hugely important detail that you have to keep in mind is, that since August last year, &lt;strong&gt;you can use MS Learn during all “role-based” exams!&lt;/strong&gt; You can read about it &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-learn-blog/introducing-a-new-resource-for-all-role-based-microsoft/ba-p/3500870&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;you-can-use-ms-learn-during-the-exam&quot;&gt;You can use MS Learn during the exam!&lt;/h3&gt;
&lt;p&gt;How that works during the exam is, that you have a button at the bottom of the screen that says MS Learn. You click it, and it &lt;strong&gt;opens a web page side-by-side to your exam&lt;/strong&gt; and you can freely search through it while answering your questions. Keep in mind, that you won’t be able to leave the MS Learn website. So if documentation points to GitHub, that link won’t work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/microsoft-learn-1.png&quot; alt=&quot;MS Learn Button&quot; /&gt;
&lt;img src=&quot;/images/microsoft-learn-2.png&quot; alt=&quot;MS Learn side-by-side&quot; /&gt;
&lt;br /&gt;
&lt;em&gt;Screenshots are taken from MS Learn, not the actual exam&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So no need to memorize all available properties and triggers! &lt;em&gt;Yaaay!&lt;/em&gt; Thank you MS, now I’m more forgiving of »Googleable questions«. But if you’re like me, and you’ve always searched through MS Docs using Google, then take a minute to figure out how to search effectively using the Search option in Docs. That’s the only search option you’ll have. &lt;a href=&quot;https://twitter.com/KarolakNatalie&quot;&gt;Natalie&lt;/a&gt; has a good &lt;a href=&quot;https://nataliekarolak.wordpress.com/2023/09/05/bc-docs-search-vs-filter-by-title/&quot;&gt;post&lt;/a&gt; about searching docs effectively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be careful though&lt;/strong&gt;. MS Learn is a great help, but it’s not a substitute for exam prep. If you try to find the answer to every question in MS Learn, you can easily &lt;strong&gt;run out of the 2 hours&lt;/strong&gt; allotted for the exam.&lt;/p&gt;

&lt;p&gt;I’ll add here, that when I tried to close the MS Learn window, my whole exam crashed. But you can always message your proctor, and they simply restarted my exam from the last question I attempted. I didn’t lose any time due to the crash. This is not to scare you into not using MS Learn, but to emphasize, that even if something goes wrong, &lt;strong&gt;don’t worry, proctors are there to help you.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;question-topics-and-types&quot;&gt;Question Topics and Types&lt;/h3&gt;

&lt;p&gt;The questions do cover a wide area of topics, &lt;strong&gt;from telemetry, KQL, AppSource submissions, and ContainerHelper, to actual AL objects, data types, and permission sets&lt;/strong&gt;. &lt;a href=&quot;https://www.linkedin.com/in/alberto-soben-a91090162/&quot;&gt;Alberto&lt;/a&gt;  did a brilliant job &lt;strong&gt;attaching various links for each topic&lt;/strong&gt; that MS specified can be included in the exam. You can find the full list &lt;strong&gt;&lt;a href=&quot;https://businesscentralgeek.com/business-central-developer-certification-ultimate-guide&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When I was preparing, I went through exam areas and marked all where I didn’t feel comfortable. I then followed the MS Learning Paths covering those areas. Every learning path ends with a &lt;strong&gt;»Check your knowledge«&lt;/strong&gt; which gives you a feeling of what kind of questions to expect from that area.&lt;/p&gt;

&lt;p&gt;The questions come in 5 types:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Multiple choice with a single correct answer&lt;/li&gt;
  &lt;li&gt;Multiple choice with multiple correct answers&lt;/li&gt;
  &lt;li&gt;Snippet where you fill in the blanks from a selection&lt;/li&gt;
  &lt;li&gt;A selection of answers in the left column, and you have to select the correct answers and put them in order in the right column&lt;/li&gt;
  &lt;li&gt;A Yes/No question&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The exam always specifies how many answers are required. It will prevent you from selecting more answers than expected and it will notify you if you try to leave the question by selecting less than the required amount of answers. You can read more about different question types &lt;a href=&quot;https://learn.microsoft.com/en-us/credentials/support/exam-duration-exam-experience&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;review-later&quot;&gt;Review later&lt;/h3&gt;

&lt;p&gt;When you’re answering a question, you can mark it as »Review Later« and »Leave a Comment«. I suggest you use the Review Later one for any questions where you’re unsure about your answer. Once you get to the end of a section, you’ll get an overview of all answered, unanswered, marked as review, and marked as comment questions, and you can navigate quickly to the ones you’d like to take another look at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mb820-review-qst.png&quot; alt=&quot;Mark Questions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mb820-review-screen.png&quot; alt=&quot;Review Screen&quot; /&gt;
&lt;br /&gt;
&lt;em&gt;Screenshots are taken from MS Learn, not the actual exam&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Especially for people taking the Beta exam, mark the questions you are confused about and &lt;strong&gt;leave a comment for Microsoft.&lt;/strong&gt; Sure, it won’t do much for you, but at least people who are coming after you might have a better exam-taking experience.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-results&quot;&gt;The results&lt;/h3&gt;

&lt;p&gt;For anyone reading this &lt;strong&gt;after the exam is live&lt;/strong&gt; (no longer in Beta), you will get your results &lt;strong&gt;immediately&lt;/strong&gt;, and you’ll see how well you did in each area (Describe Business Central; Install, develop, and deploy for BC; …). For anyone taking the &lt;strong&gt;Beta exam&lt;/strong&gt;, we’ll get our results &lt;strong&gt;within 10 days from the day the Certification goes live&lt;/strong&gt; (goes out of beta). We don’t have a date yet when that’s supposed to be, but since the Beta discounts are valid until the 21st of February, I expect the exam to be live &lt;strong&gt;somewhere in March&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;my-take-away&quot;&gt;My take away&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MS Learn&lt;/strong&gt; really does help so we’re not tripping over questions that are a &lt;strong&gt;quick search away&lt;/strong&gt;. There were questions about data types I haven’t used in years, like &lt;strong&gt;XMLPorts&lt;/strong&gt;, but I could find what I needed in the documentation. Does it mean there are no “stupid” questions left? No, I was quite annoyed with some, especially the &lt;strong&gt;KQL-related&lt;/strong&gt; ones. But I left my comments, hopefully, they’ll be improved in the future. Overall, the exam was quite enjoyable for me, and I think it does try to capture development knowledge for the most part. At least it’s a &lt;strong&gt;starting point&lt;/strong&gt; that will improve and we now have a &lt;strong&gt;developer certification available&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And again, if you’ve been in the AL world for a while now, and you’ve worked on various projects, &lt;strong&gt;you got this&lt;/strong&gt;! 
Some preparation for areas you’re not too comfortable with, and you’re ready to go! &lt;strong&gt;Trust yourself&lt;/strong&gt;, you’ve done most of this before!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;For anyone reading this after taking the exam, have I missed anything? Is there something else, you wish you knew before taking it? Let me know, and I’ll add it. Help the next person get certified!&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Feb 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/my-mb-820-experience/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/my-mb-820-experience/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>3 Pitfalls of Var Parameters</title>
        <description>&lt;p&gt;I believe I don’t have to introduce the purpose of &lt;strong&gt;var&lt;/strong&gt; in procedure parameters too much. If the parameter has a var modifier, it’s passed &lt;strong&gt;by reference&lt;/strong&gt;, and any changes within the procedure will affect the variable that was passed into the procedure. If it doesn’t, it’s passed &lt;strong&gt;by value&lt;/strong&gt;, meaning that any changes will stay local to that procedure. However, that’s not always the case. There are a couple of edge cases when it comes to var parameters, and as I was about to write the explanation for our internal learning purposes anyway, I decided to use this as an opportunity to make a debut in the world of blogging.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;parameters-that-are-always-passed-by-reference&quot;&gt;Parameters that are always passed by reference&lt;/h3&gt;
&lt;p&gt;Recently I had a younger colleague struggle with passing a parameter to a function by reference. Now this wasn’t your average “you forgot a var somewhere in the signature”, but rather a List that was being passed in. The List parameter was not marked as var, yet &lt;strong&gt;all the changes applied within the procedure also affected the instance of a List outside the procedure&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Wait what? How come?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, a list, unlike your ordinary texts, integers or Booleans is a &lt;strong&gt;reference type&lt;/strong&gt;, which means assigning it to a new variable or passing it to a method without var will create a separate variable that &lt;strong&gt;writes to the same list&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-list.png&quot; alt=&quot;List value assignment when passed without var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s actually quite well documented in the &lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/methods-auto/list/list-data-type&quot;&gt;docs&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-list-doc.png&quot; alt=&quot;List pass-by-reference documentation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But we’re so used to the distinction that a non-var parameter is passed by value and we can manipulate it however we like, while var parameters are passed by reference, and changes will have an effect outside of the procedure.&lt;/p&gt;

&lt;p&gt;And Lists are not alone, there are a couple of data types that are always passed &lt;strong&gt;by reference&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dictionary&lt;/li&gt;
  &lt;li&gt;JsonObject&lt;/li&gt;
  &lt;li&gt;JsonArray&lt;/li&gt;
  &lt;li&gt;JsonValue&lt;/li&gt;
  &lt;li&gt;JsonToken&lt;/li&gt;
  &lt;li&gt;OutStream&lt;/li&gt;
  &lt;li&gt;InStream&lt;/li&gt;
  &lt;li&gt;Codeunit&lt;/li&gt;
  &lt;li&gt;Interface&lt;/li&gt;
  &lt;li&gt;ErrorInfo&lt;/li&gt;
  &lt;li&gt;Notification&lt;/li&gt;
  &lt;li&gt;Query&lt;/li&gt;
  &lt;li&gt;TextBuilder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Be careful&lt;/strong&gt; with these data types, you might get them back in a different state when the procedure finishes. This is especially true for &lt;strong&gt;exposing them through events&lt;/strong&gt;, as we have no control if a subscriber can change the contents of the variable or not.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;Var modifiers don’t make a difference, but you should still use them to &lt;strong&gt;signal the intentionality&lt;/strong&gt; of your procedure. If the procedure intends to modify the parameter, add a var in front of it, if it’s only reading data, skip it.&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;This was actually not the full truth. Var &lt;strong&gt;does make a difference&lt;/strong&gt;, even with reference parameters. You can read more about it here: &lt;a href=&quot;/blog/2024/reference-parameters-var-does-matter/&quot;&gt;Reference parameters - var does matter&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;temporary-records&quot;&gt;Temporary records&lt;/h3&gt;
&lt;p&gt;If we do an Insert on a normal record, we write to the database. If the table is temporary, the record is only stored in memory. &lt;em&gt;Easy enough&lt;/em&gt;. However, be careful when you’re creating methods that expect temporary records. As it turns out, if the parameter is a record that is passed by reference (has a var modifier), then &lt;strong&gt;the “temporary” modifier has no effect&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you have a procedure that takes in a Customer record by reference and is marked as temporary:&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;procedure&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;MyProcedure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Record&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Customer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temporary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you pass a non-temporary Customer record in, the record will &lt;strong&gt;remain non-temporary&lt;/strong&gt;, and any record operations that MyProcedure is doing will actually make changes to the database.&lt;/p&gt;

&lt;p&gt;Here’s how the records behave:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-temp-all.png&quot; alt=&quot;IsTemporary behavior depending on var and temporary parameter modifiers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If your procedures are making any &lt;strong&gt;dangerous operations&lt;/strong&gt; on a pass-by-reference record, like &lt;strong&gt;DeleteAll&lt;/strong&gt;, I highly suggest adding an &lt;strong&gt;IsTemporary gatekeeper&lt;/strong&gt; at the beginning, either exiting or throwing a record if the record is not temporary.&lt;/p&gt;

&lt;p&gt;Again, even though the temporary modifier does not affect the execution, keep using it for &lt;strong&gt;signaling intentionality&lt;/strong&gt;. Are you expecting a temporary record? Mark the parameter as temporary.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;streams-and-blobs&quot;&gt;Streams and Blobs&lt;/h3&gt;
&lt;p&gt;Short fact, &lt;strong&gt;streams don’t hold data, blobs hold data&lt;/strong&gt;. So if you’re trying to read information with a stream from a blob that no longer exists (because it was de-allocated from memory), the stream won’t have anything to read from.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Okay, but what does that have to do with passing parameters around by reference?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, let’s take a look at this simple example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-stream-bad.png&quot; alt=&quot;Read from a local blob with InStream&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have a blob that holds» Hello World« text, and that’s what we should be able to read with an InStream. This is another example of &lt;em&gt;» This should work, why doesn’t this work?«&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And no, the answer is not &lt;em&gt;» because InStream is not passed by reference«&lt;/em&gt;. As per our first point, streams are &lt;strong&gt;always passed by reference.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Again, &lt;strong&gt;streams don’t hold data&lt;/strong&gt;. You can think of streams as straws we use to drink. If you try to drink from a full cup, well, that will work, you’ll drink. But now I’ll take your cup, throw it away, and ask you to take another sip. &lt;em&gt;You can’t, can you?&lt;/em&gt; And that’s exactly what’s happening in the above example.&lt;/p&gt;

&lt;p&gt;In the ImportFile procedure, we take our cup (Temp Blob), pour in a nice cold &lt;em&gt;Hello World&lt;/em&gt;, and put in the straw we got as a parameter. But now as the procedure finishes, the local variables from our procedure get &lt;strong&gt;de-allocated from memory&lt;/strong&gt;. As TempBlob is one of our local variables, we’re now effectively left without our cup, drawing air through our straw, feeling sad.&lt;/p&gt;

&lt;p&gt;These two options on the other hand will work just fine:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-stream-global.png&quot; alt=&quot;Reading from a global blob with InStream&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-stream-param.png&quot; alt=&quot;Reading from a parameter blob with InStream&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This time, as TempBlob is &lt;strong&gt;not a local variable&lt;/strong&gt;, it doesn’t get de-allocated, and the InStream can successfully read data from it. So just keep in mind, that &lt;strong&gt;data source needs to still be available when you try to read from it&lt;/strong&gt; with an InStream, either as a global variable or by being passed as a parameter.&lt;/p&gt;

&lt;p&gt;Note: &lt;strong&gt;UploadIntoStream&lt;/strong&gt; works just fine, as the uploaded file is allocated outside of procedure scope:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/var-param-stream-upload.png&quot; alt=&quot;Read from UploadToInStream function with InStream&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Jan 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/3-pitfalls-of-var-parameters/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/3-pitfalls-of-var-parameters/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>A Blogging Journey Begins!</title>
        <description>&lt;p&gt;Finally! I have a blog!&lt;/p&gt;

&lt;p&gt;For the past few years, I’ve been wanting to have a place where I can share my ideas about Business Central tech. It took me a while, I know, but now I finally have it! I haven’t really done much writing in the past, so this will be an interesting journey for me, and hopefully for you as well.&lt;br /&gt;&lt;br /&gt;
The areas I want to explore and share with you are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The edges of AL, where AL patterns break, and where we need to go beyond the borders of BC.&lt;/li&gt;
  &lt;li&gt;Weird situations with AL that I come across, which I want to document for myself and the next poor soul that needs to deal with them.&lt;/li&gt;
  &lt;li&gt;Recaps of conference sessions I present, so that they are in a written and searchable format.&lt;/li&gt;
  &lt;li&gt;Recaps of BC conferences. I wish everyone could attend them, but for those who cannot, I want to share key takeaways, as the community findings are always intriguing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think this will be a fun activity for me, and hopefully sometimes insightful for you!&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Jun 2023 01:08:27 +0300</pubDate>
        <link>https://tine.staric.net/blog/2023/hello-world-of-blogging/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2023/hello-world-of-blogging/</guid>
        
        
        <category>welcome</category>
        
      </item>
    
  </channel>
</rss>

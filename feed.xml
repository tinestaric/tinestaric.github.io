<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech Adventures in Business Central</title>
    <description>A Blog by Tine Starič</description>
    <link>https://tine.staric.net/</link>
    <atom:link href="https://tine.staric.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 01 Jan 2025 23:43:57 +0200</pubDate>
    <lastBuildDate>Wed, 01 Jan 2025 23:43:57 +0200</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>Trigger Sequence in AL</title>
        <description>&lt;p&gt;Here’s a small &lt;strong&gt;&lt;em&gt;“let me bookmark this”&lt;/em&gt;&lt;/strong&gt; post.&lt;/p&gt;

&lt;p&gt;I often did not completely understand trigger and event sequences in AL. I &lt;strong&gt;&lt;em&gt;sort of&lt;/em&gt;&lt;/strong&gt; knew them, but I doubted myself just enough to keep going back to the documentation. It’s not like the documentation is bad, but every time it took me just a few additional minutes to figure out the answer, that I decided I wanted to &lt;strong&gt;visualize&lt;/strong&gt; this.&lt;/p&gt;

&lt;p&gt;It came in handy for me, maybe it will for you too. I’d love to hear if you’d add any other sequence!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Few things to remember that I didn’t want to jam into the visualizations&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Apps with &lt;strong&gt;lower IDs&lt;/strong&gt; execute their triggers and subscribers &lt;strong&gt;before those with higher IDs.&lt;/strong&gt;&lt;br /&gt;
For example, if &lt;em&gt;App A&lt;/em&gt; has an ID like &lt;em&gt;“1bs3..”&lt;/em&gt; and &lt;em&gt;App B&lt;/em&gt; has &lt;em&gt;“c23f..”&lt;/em&gt;, App A’s triggers and subscribers will always run first.&lt;/li&gt;
  &lt;li&gt;Within the same App, objects with &lt;strong&gt;lower Object IDs&lt;/strong&gt; execute their triggers and subscribers &lt;strong&gt;before those with higher Object IDs&lt;/strong&gt;&lt;br /&gt;
A subscriber in &lt;em&gt;Codeunit 50000&lt;/em&gt; will execute before one in &lt;em&gt;Codeunit 50001&lt;/em&gt;. Similarly, triggers in &lt;em&gt;Table Extension 50000&lt;/em&gt; will run before those in &lt;em&gt;Table Extension 50001&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;Subscribers in the same codeunit are executed in &lt;strong&gt;alphabetical order&lt;/strong&gt; by procedure name&lt;br /&gt;
For instance, a procedure named &lt;em&gt;MySubscriber1&lt;/em&gt; will run before &lt;em&gt;MySubscriber2&lt;/em&gt;, regardless of their order in the code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When looking at the Lookup flow, remember that &lt;strong&gt;only one OnLookup trigger can be executed&lt;/strong&gt; at a time. Once the first one is executed, others are ignored.&lt;/p&gt;

&lt;p&gt;I made a small trigger logger for the purpose of this post, you can find it &lt;strong&gt;&lt;a href=&quot;https://github.com/tinestaric/BCExamples/tree/Master/TriggerLogger&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;. It’s a simple extension that logs the trigger and event sequence to a table.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 style=&quot;text-align: center;&quot;&gt;Trigger Flow Diagrams&lt;/h3&gt;

&lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/css/graph-demo.css&quot; /&gt;

&lt;div class=&quot;graph-demo-button-group&quot;&gt;
    &lt;div class=&quot;graph-demo-group-heading&quot;&gt;Record Operation Triggers:&lt;/div&gt;
    &lt;div class=&quot;graph-demo-button-container&quot;&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;insert&apos;)&quot;&gt;Insert&lt;/button&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;modify&apos;)&quot;&gt;Modify&lt;/button&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;delete&apos;)&quot;&gt;Delete&lt;/button&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;rename&apos;)&quot;&gt;Rename&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;graph-demo-button-group&quot;&gt;
    &lt;div class=&quot;graph-demo-group-heading&quot;&gt;Field Operation Triggers:&lt;/div&gt;
    &lt;div class=&quot;graph-demo-button-container&quot;&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;validate&apos;)&quot;&gt;Validate&lt;/button&gt;
        &lt;button class=&quot;graph-demo-flow-button&quot; onclick=&quot;showFlow(&apos;lookup&apos;)&quot;&gt;Lookup&lt;/button&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;graph-demo-diagram-container&quot;&gt;
    &lt;div class=&quot;mermaid&quot; id=&quot;flowchart-container&quot;&gt;
        flowchart TD
        Start --&amp;gt; NoChart
        NoChart(Click a button to display trigger flow)
    &lt;/div&gt;
&lt;/div&gt;

&lt;script src=&quot;https://unpkg.com/mermaid@9.4.3/dist/mermaid.min.js&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;module&quot;&gt;
  let mermaidLoaded = false;
  mermaid.initialize({ 
    startOnLoad: true,
    securityLevel: &apos;loose&apos;
  });
  // Wait for mermaid to be fully loaded
  mermaid.init();
  mermaidLoaded = true;
  import { loadFlow } from &apos;/assets/scripts/loadFlows.js&apos;;
  window.showFlow = async function(type) {
    if (!mermaidLoaded) {
      await new Promise(resolve =&gt; setTimeout(resolve, 500));
    }
    const chart = await loadFlow(type);
    const container = document.getElementById(&apos;flowchart-container&apos;);
    container.innerHTML = chart;    
    mermaid.render(&apos;newFlow&apos;, chart, function(svgCode) {
      container.innerHTML = svgCode;
    });
  }
&lt;/script&gt;

</description>
        <pubDate>Wed, 01 Jan 2025 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2025/trigger-sequence/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2025/trigger-sequence/</guid>
        
        
        <category>welcome</category>
        
      </item>
    
      <item>
        <title>Forget how; when should we use preprocessing symbols?</title>
        <description>&lt;p&gt;This was one of the most &lt;em&gt;difficult&lt;/em&gt; blog posts to write so far. I kept changing directions of what I even wanted to explain with it…&lt;/p&gt;

&lt;p&gt;You see, I come up with blog ideas by &lt;strong&gt;explaining concepts&lt;/strong&gt; to colleagues internally, and when a topic comes up &lt;strong&gt;often enough&lt;/strong&gt;, I write it down as it’s easier to share with everyone. The other aspect is when I see a concept &lt;em&gt;“in the wild”&lt;/em&gt; which gets me thinking about how we should &lt;strong&gt;adopt it internally&lt;/strong&gt;, and to structure my thoughts, I write it down, making it easier to &lt;strong&gt;defend my position&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The topic of &lt;strong&gt;preprocessing directives&lt;/strong&gt; comes mainly from this second part. The way &lt;strong&gt;&lt;em&gt;Companial&lt;/em&gt;&lt;/strong&gt; is positioned, I get to work with &lt;em&gt;many different partners&lt;/em&gt; every year. Sometimes I learn from them, sometimes I can suggest best practices that I’ve seen elsewhere. In my opinion, &lt;strong&gt;&lt;em&gt;it’s a win-win&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I recently started working with a partner that has a &lt;em&gt;huge&lt;/em&gt; solution. I mean &lt;strong&gt;&lt;em&gt;HUGE!&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;20k+ objects.&lt;/em&gt; That’s a &lt;em&gt;crazy&lt;/em&gt; amount of code. It was also my first time using &lt;em&gt;preprocessing directives&lt;/em&gt;, which made me wonder &lt;em&gt;why I had never needed them before&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;heres-why&quot;&gt;Here’s why:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;I was building apps &lt;strong&gt;from scratch&lt;/strong&gt;, that no one had a dependency on yet &lt;br /&gt;
It means I didn’t have to &lt;em&gt;worry about breaking changes&lt;/em&gt; or the obsoletion process&lt;/li&gt;
  &lt;li&gt;We targeted &lt;strong&gt;SaaS tenants only&lt;/strong&gt; &lt;br /&gt;
There was no need to support &lt;em&gt;multiple versions&lt;/em&gt; of codebases in parallel&lt;/li&gt;
  &lt;li&gt;The work items were never &lt;strong&gt;too big&lt;/strong&gt; &lt;br /&gt;
We never had &lt;em&gt;big long-lived branches&lt;/em&gt; that would cause merge conflicts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above three bullet points took me &lt;strong&gt;quite a while to realize&lt;/strong&gt;, but once I wrapped my head around it, it was finally clear to me when I’d want to use the &lt;em&gt;preprocessing symbols&lt;/em&gt; and that’s what I want to share with you today.&lt;/p&gt;

&lt;p&gt;I’m not going to talk too much about &lt;strong&gt;&lt;em&gt;how&lt;/em&gt;&lt;/strong&gt; they work, &lt;a href=&quot;https://www.linkedin.com/in/yzhums&quot;&gt;Yun&lt;/a&gt; had a great &lt;a href=&quot;https://yzhums.com/2606/&quot;&gt;blog post&lt;/a&gt; on that topic, back when they were introduced. Another &lt;a href=&quot;https://nataliekarolak.wordpress.com/2023/05/08/conditional-directives-clean22-demystified/&quot;&gt;great post&lt;/a&gt; I found was by &lt;a href=&quot;https://x.com/KarolakNatalie&quot;&gt;Natalie&lt;/a&gt;. She describes how we should test code with conditional directives very well. But I’ll focus mainly on &lt;strong&gt;&lt;em&gt;when&lt;/em&gt;&lt;/strong&gt; is a good idea to use them for our apps.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;introduce-changes-gradually-announce-changes&quot;&gt;Introduce changes gradually (announce changes)&lt;/h3&gt;

&lt;p&gt;We’re now in the &lt;em&gt;AppSource&lt;/em&gt; era. Anyone can potentially depend on the apps we publish there. We cannot just remove a public procedure from our app, as that &lt;strong&gt;might break any app&lt;/strong&gt; that is using it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hold on, aren’t obsoletion tags and &lt;strong&gt;App Source Cop&lt;/strong&gt; there to prevent that?&lt;/em&gt; &lt;em&gt;Yes!&lt;/em&gt; However, these tools only prevent &lt;strong&gt;hard-breaking changes&lt;/strong&gt;. Changes that would prevent an external party from even compiling their app against our new release. However, they do nothing when it comes to &lt;strong&gt;soft-breaking changes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Soft-breaking changes?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Changes that won’t &lt;strong&gt;prevent&lt;/strong&gt; an &lt;em&gt;external party&lt;/em&gt; from compiling their app, but their apps will &lt;strong&gt;no longer work as expected&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Take the removal of a field for example.&lt;/p&gt;

&lt;p&gt;Let’s look at the &lt;em&gt;“IC Partner G/L Acc. No.”&lt;/em&gt; That will be removed from &lt;em&gt;Gen. Journal Line&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/icglacc-start.png&quot; alt=&quot;IC G/L Account at the beginning&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We know we can’t just remove a field. &lt;em&gt;App Source Cop&lt;/em&gt; will be all up in our faces if we try that. So, we &lt;strong&gt;obsolete&lt;/strong&gt; it first, and we’ll remove it in one of the subsequent releases.&lt;/p&gt;

&lt;p&gt;But no cop would yell at us for removing the field’s trigger, on any of its references… Imagine if this is how we &lt;em&gt;obsoleted&lt;/em&gt; the field:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/icglacc-clean-wrong.png&quot; alt=&quot;IC G/L Account bad cleanup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/icglacc-ref-clean-wrong.png&quot; alt=&quot;IC G/L Account reference bad cleanup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We removed the trigger, and we removed the references, &lt;strong&gt;but hey, we marked the field as obsolete&lt;/strong&gt;. &lt;em&gt;We’re gradually introducing changes…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Yeah, no&lt;/em&gt;&lt;/strong&gt;. We still &lt;strong&gt;broke everyone&lt;/strong&gt; using this field, immediately after this &lt;strong&gt;update is deployed&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;So, what’s the better way?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Wrap the changes in preprocessing symbols and clean them in a later release. Here’s how MS actually obsoleted this field.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/icglacc-end.png&quot; alt=&quot;IC G/L Account at the end&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/icglacc-ref-clean-right.png&quot; alt=&quot;IC G/L Account reference good cleanup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It means that today, the field still &lt;strong&gt;works exactly as it did for years&lt;/strong&gt;. But anyone using it in their apps will get a &lt;em&gt;warning&lt;/em&gt; that they should move away from it. When the time comes, they will enable the &lt;strong&gt;&lt;em&gt;CLEAN22 symbol&lt;/em&gt;&lt;/strong&gt;, the field becomes removed, and the code is no longer executed.&lt;/p&gt;

&lt;p&gt;This becomes especially important if we want to &lt;strong&gt;&lt;em&gt;refactor events&lt;/em&gt;&lt;/strong&gt;. Let’s look at the following change.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/event-bad.png&quot; alt=&quot;Bad event cleanup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;App Source Cop&lt;/em&gt; is fine with this change. We’ve obsoleted an event. The next release can remove it. However, since the event is no longer being fired, any changes from event subscribers are now ignored. All external apps that were using this event are now &lt;strong&gt;broken&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If we want to introduce changes gradually, this should be the way to go:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/event-good.png&quot; alt=&quot;Good event cleanup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today, the event still &lt;strong&gt;fires off&lt;/strong&gt;. Any subscribers are &lt;strong&gt;warned&lt;/strong&gt; that the event is &lt;em&gt;going away&lt;/em&gt; and that they should find a different solution. When it’s time, we can &lt;strong&gt;enable and clean up the preprocessing symbols&lt;/strong&gt; to apply our change.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Does that mean I should wrap every change I make in preprocessing symbols?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://xkcd.com/1172/&quot;&gt;Every change breaks someone’s workflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/xkcd.png&quot; alt=&quot;Every change breaks someone&apos;s workflow - xkcd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But that doesn’t mean we should be &lt;strong&gt;afraid to make changes&lt;/strong&gt;. &lt;em&gt;Preprocessing everything&lt;/em&gt; is a sure way to &lt;strong&gt;&lt;em&gt;maintenance hell&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;What I want to point out is that if we have a code path that &lt;strong&gt;many external apps extend or use&lt;/strong&gt; we should think about &lt;strong&gt;&lt;em&gt;gradually introducing changes&lt;/em&gt;&lt;/strong&gt; in that code path, and preprocessing symbols are the way to go about it. &lt;strong&gt;Especially when dealing with events.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;support-multiple-versions&quot;&gt;Support multiple versions&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;OnPrem isn’t dead.&lt;/em&gt;&lt;/strong&gt; And when supporting &lt;em&gt;OnPrem&lt;/em&gt; customers, we usually have to support more than one target version of BC. Supporting them through a branch-per-version approach the symbols are less relevant to you, but if you have a single codebase, here’s why you should consider using them.&lt;/p&gt;

&lt;h4 id=&quot;dont-wait-until-the-last-second-to-make-changes&quot;&gt;Don’t wait until the last second to make changes&lt;/h4&gt;

&lt;p&gt;When &lt;em&gt;Base App&lt;/em&gt; obsoletes a functionality or an event, &lt;strong&gt;&lt;em&gt;should you fix it immediately?&lt;/em&gt;&lt;/strong&gt; Or wait until it &lt;strong&gt;&lt;em&gt;becomes an error?&lt;/em&gt;&lt;/strong&gt; Waiting until it becomes an error is a &lt;strong&gt;&lt;em&gt;big no-no&lt;/em&gt;&lt;/strong&gt; in my book. I believe in the &lt;strong&gt;&lt;em&gt;no-warnings approach&lt;/em&gt;&lt;/strong&gt;. I know it’s not as easy for &lt;em&gt;old legacy codebases&lt;/em&gt;, but new development should have &lt;em&gt;zero warnings. &lt;strong&gt;Period.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In v24, &lt;strong&gt;&lt;em&gt;No. Series&lt;/em&gt; procedures became &lt;em&gt;obsolete&lt;/em&gt;&lt;/strong&gt; due to the move to the &lt;strong&gt;&lt;em&gt;Business Foundation&lt;/em&gt;&lt;/strong&gt;. I had a couple of apps where I had to fix these warnings. I didn’t &lt;strong&gt;&lt;em&gt;have&lt;/em&gt;&lt;/strong&gt; to do that. Old code will still &lt;strong&gt;&lt;em&gt;work until (at least) v26.&lt;/em&gt;&lt;/strong&gt; But I’d just be pushing work down the road. It’s understandable, if there’s a &lt;em&gt;higher priority&lt;/em&gt; right now. But if we have the time, &lt;em&gt;why take that additional tech debt on?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What if I’d still have to &lt;strong&gt;&lt;em&gt;support v23 as well?&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;That means I cannot just fix all warnings…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Well, I can, with preprocessing symbols:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/preprocessing/noseries.png&quot; alt=&quot;No. Series cleanup with preprocessing symbols&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When I build higher versions, I enable the symbol, and the warnings are gone. When I &lt;em&gt;drop support for v23&lt;/em&gt;, I can &lt;strong&gt;&lt;em&gt;clean up the v24OrGreater symbol&lt;/em&gt;&lt;/strong&gt;, and I’m done.&lt;/p&gt;

&lt;p&gt;This point applies even more if we’re building &lt;strong&gt;&lt;em&gt;a new feature&lt;/em&gt;&lt;/strong&gt;. If we build a new feature and decide to use the old &lt;em&gt;NoSeriesManagement&lt;/em&gt; codeunit, we’re willingly throwing even more work on the &lt;strong&gt;&lt;em&gt;tech debt pile.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Quick side note, this nice line highlighting showing me which line is active and which obsolete is provided by &lt;strong&gt;AZ AL Dev Tools&lt;/strong&gt;, so if you’re working with preprocessing symbols, the extension is a must-have.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;merge-changes-early&quot;&gt;Merge changes early&lt;/h3&gt;

&lt;p&gt;Out of the three reasons for using the &lt;em&gt;preprocessing symbols&lt;/em&gt;, this is the one I used the least, but at the same time, I’m also most interested in it.&lt;/p&gt;

&lt;p&gt;This summer I held a session at &lt;em&gt;Tech Days&lt;/em&gt; about &lt;strong&gt;&lt;em&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=v-EaIJ0f9tU&quot;&gt;Code Review&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; where I was trying to be quite dogmatic about &lt;strong&gt;keeping pull requests small&lt;/strong&gt;. &lt;em&gt;Long-lived feature branches&lt;/em&gt; are a recipe for issues; &lt;em&gt;constant merges, merge conflicts, and very painful code reviews&lt;/em&gt;. And yet a &lt;em&gt;few months later&lt;/em&gt;, &lt;strong&gt;I find myself working on long-lived branches and huge pull requests&lt;/strong&gt;. It was easy to &lt;em&gt;“preach”&lt;/em&gt; small pull requests when we were only building new features. Now we’re dealing with &lt;strong&gt;refactoring a huge monolith&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I’m changing &lt;em&gt;“just”&lt;/em&gt; one field and have to &lt;em&gt;touch more than 150 other objects.&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Crazy.&lt;/em&gt;&lt;/strong&gt; But I get it, changes have to be made on an &lt;strong&gt;&lt;em&gt;all-or-nothing basis.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But that got me thinking, &lt;em&gt;why is that?&lt;/em&gt; &lt;strong&gt;Why&lt;/strong&gt; do they have to be made on an &lt;strong&gt;all-or-nothing basis?&lt;/strong&gt; &lt;em&gt;Can we get around that somehow?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I talked with friends who work in &lt;strong&gt;other languages&lt;/strong&gt; about how they would deal with this issue. At first, it seemed they didn’t quite get my problem. They just said &lt;strong&gt;&lt;em&gt;“feature flags”&lt;/em&gt;&lt;/strong&gt; to everything I said…&lt;/p&gt;

&lt;p&gt;Okay, &lt;em&gt;feature flags&lt;/em&gt;. Hide the functionality behind a flag and &lt;strong&gt;merge to the main branch&lt;/strong&gt;. &lt;em&gt;But what about the table fields that I have to add?&lt;/em&gt; I can’t &lt;em&gt;“hide”&lt;/em&gt; the additional fields on a table behind a feature flag, and if I just add them and make a mistake, &lt;strong&gt;I won’t be able to remove them&lt;/strong&gt;, as it would be a &lt;strong&gt;breaking change…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And that’s when it hit me. &lt;strong&gt;&lt;em&gt;What if I use preprocessing symbols as feature flags?&lt;/em&gt;&lt;/strong&gt; This would solve my problems. &lt;strong&gt;Merge smaller chunks of changes&lt;/strong&gt; to the &lt;em&gt;main branch&lt;/em&gt; quicker, and once everything is in and tested, &lt;strong&gt;turn it on and clean it up!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As I said, I’ve &lt;strong&gt;only started exploring&lt;/strong&gt; the feasibility of this approach as an alternative to &lt;strong&gt;long-lived branches and big PRs&lt;/strong&gt;. &lt;em&gt;But I do like how it looks…&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, this should give you an idea when &lt;strong&gt;&lt;em&gt;using symbols can be a good idea.&lt;/em&gt;&lt;/strong&gt; Before I wrap this long post up, here are a few more quick questions I sometimes get from developers:&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;when-should-we-clean-up-the-symbols&quot;&gt;When should we clean up the symbols?&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Clean them up immediately&lt;/strong&gt; after you turn them on for a &lt;em&gt;production release&lt;/em&gt;. &lt;strong&gt;&lt;em&gt;Seriously.&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;I guarantee you&lt;/em&gt;, that you’ll never &lt;em&gt;enable a symbol, build, test, and release the app&lt;/em&gt;, and then realize, &lt;strong&gt;oops,&lt;/strong&gt; we need to undo those changes. If we need an option to &lt;strong&gt;&lt;em&gt;“undo”&lt;/em&gt;&lt;/strong&gt; the behavior, &lt;em&gt;run-time feature flags&lt;/em&gt; are a much better option.&lt;/p&gt;

&lt;p&gt;The only exception to this rule is the &lt;em&gt;preprocessing symbols&lt;/em&gt; used to support &lt;em&gt;multiple versions&lt;/em&gt;, like our &lt;strong&gt;v24OrGreater&lt;/strong&gt; example above. Clean those up as soon as they’re &lt;strong&gt;&lt;em&gt;enabled for all versions you support&lt;/em&gt;&lt;/strong&gt;. In our case, that would mean when we &lt;strong&gt;drop the support for v23.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;how-do-i-clean-them-up&quot;&gt;How do I clean them up?&lt;/h4&gt;

&lt;p&gt;I have a &lt;strong&gt;small script&lt;/strong&gt; that you can find &lt;a href=&quot;https://github.com/tinestaric/BCExamples/blob/Master/PreprocessingSymbolCleanup/PreprocessingSymbolCleanup.ps1&quot;&gt;here&lt;/a&gt;. It loops through all files in the project and &lt;strong&gt;removes the code paths for a specified feature flag.&lt;/strong&gt; There are likely other tools already out there, that can handle the cleanup. &lt;em&gt;Preprocessing symbols&lt;/em&gt; aren’t exactly a &lt;em&gt;novelty&lt;/em&gt;, even in AL they’ve been around for a while.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;how-do-i-enable-a-symbol-for-the-base-app&quot;&gt;How do I enable a Symbol for the Base App?&lt;/h4&gt;

&lt;p&gt;I got this question quite a couple of times, and I remember I too was confused in the beginning when I didn’t understand &lt;em&gt;preprocessing symbols&lt;/em&gt;. You open a base app object like &lt;em&gt;Sales-Post&lt;/em&gt; and see a &lt;strong&gt;CLEAN23&lt;/strong&gt; code path. &lt;strong&gt;&lt;em&gt;How do I “enable” this new code path?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You don’t.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Microsoft&lt;/em&gt; does. And when they will, you won’t see those symbols anymore, as they’ll &lt;strong&gt;also clean them up.&lt;/strong&gt; Think of those code paths as &lt;em&gt;“what’s going to change in the future”&lt;/em&gt;, but is currently not in use. As we talked about, it’s mainly about &lt;em&gt;Microsoft&lt;/em&gt; &lt;strong&gt;introducing changes gradually.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;finally&quot;&gt;Finally&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Do preprocessing symbols make the code less readable?&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Yes, yes, they do.&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;Do they make testing harder, as there are now more possible code paths?&lt;/em&gt; &lt;strong&gt;&lt;em&gt;Another resounding yes.&lt;/em&gt;&lt;/strong&gt; All these coding decisions always come with &lt;strong&gt;trade-offs&lt;/strong&gt;. &lt;em&gt;Should you use them?&lt;/em&gt; &lt;strong&gt;&lt;em&gt;I don’t know.&lt;/em&gt;&lt;/strong&gt; I made this post, to make my reasoning about it easier. But it doesn’t mean that they will &lt;strong&gt;apply to your situation.&lt;/strong&gt; At least next time you have issues like these, you know that &lt;em&gt;preprocessing symbols&lt;/em&gt; can be a way to deal with them.&lt;/p&gt;

</description>
        <pubDate>Sun, 06 Oct 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/preprocessing-symbols/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/preprocessing-symbols/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Namespaces in AL - Is it time to start using them?</title>
        <description>&lt;p&gt;&lt;em&gt;School’s back&lt;/em&gt;, so it’s time for the blogs to get back! This time I want to take a jab at &lt;strong&gt;namespaces&lt;/strong&gt;. Not really the technical &lt;strong&gt;&lt;em&gt;“how”&lt;/em&gt;&lt;/strong&gt; of namespaces. I believe that part is rather easy and has already been covered multiple times. Microsoft presented a &lt;a href=&quot;https://www.youtube.com/watch?v=F8NH69BGnKk&quot;&gt;brilliant session&lt;/a&gt; about namespaces at &lt;a href=&quot;https://www.bctechdays.com/event&quot;&gt;BCTechDays&lt;/a&gt; this year.
Instead I want to focus on &lt;strong&gt;&lt;em&gt;WHY&lt;/em&gt;&lt;/strong&gt;. That’s a question I recently received multiple times. &lt;em&gt;We never needed namespaces in the past, why do we need them now? Do they bring any benefits or are they just a hassle? Is it time to start using them?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Over the past few months, I got to work on apps that &lt;em&gt;were namespaced&lt;/em&gt;, apps that &lt;em&gt;weren’t&lt;/em&gt;, and completely &lt;em&gt;greenfield&lt;/em&gt; apps where I could decide if we wanted to adopt namespaces or not. So, this post is a view on namespaces from &lt;strong&gt;my perspective&lt;/strong&gt;, and feel free to disagree with me.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;why-namespaces&quot;&gt;Why Namespaces?&lt;/h3&gt;

&lt;h4 id=&quot;structure&quot;&gt;Structure&lt;/h4&gt;

&lt;p&gt;I often do &lt;strong&gt;&lt;em&gt;“audits”&lt;/em&gt; of large code bases&lt;/strong&gt; for partners, trying to determine the &lt;em&gt;extent of their tech debt&lt;/em&gt;, whether they will ever get to &lt;em&gt;multi-app architecture&lt;/em&gt;, or reach &lt;em&gt;AppSource compatibility&lt;/em&gt;. To be able to do that, I need to &lt;strong&gt;understand the app’s architecture&lt;/strong&gt;, &lt;em&gt;what am I even looking at&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When I have to work with large apps where the src folder looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/folders-bad.png&quot; alt=&quot;Bad folder structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I take a deep breath&lt;/em&gt;, ask myself 7 times why am I doing this to myself, and then try to make sense of files that are supposedly important, and work my way through their &lt;strong&gt;references&lt;/strong&gt;. &lt;em&gt;It’s never a fun experience.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, if I open a project and the project is separated into areas like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/folders-good.png&quot; alt=&quot;Good folder structure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It makes a &lt;strong&gt;huge difference&lt;/strong&gt;. I can wrap my head around individual parts that &lt;strong&gt;logically fit together&lt;/strong&gt;. Structuring your code in &lt;strong&gt;functional areas&lt;/strong&gt; does wonders for &lt;strong&gt;discoverability&lt;/strong&gt;. &lt;em&gt;Shocker, right?&lt;/em&gt; Any new developer you try to onboard onto your codebase will have to go through the same process I have to go through, and &lt;strong&gt;high discoverability&lt;/strong&gt; makes this process &lt;strong&gt;much smoother&lt;/strong&gt;. &lt;em&gt;If I can’t convince you that the second folder structure is better than the first one, that I probably won’t ever get you to uptake namespaces…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fine Tine, &lt;strong&gt;organized code is better than not organized&lt;/strong&gt;, what do &lt;strong&gt;namespaces&lt;/strong&gt; have to do with that?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, structuring your code in &lt;strong&gt;folders per functional area&lt;/strong&gt; is in my opinion a &lt;strong&gt;prerequisite&lt;/strong&gt; for starting with namespaces. Discoverability is something &lt;strong&gt;legacy codebases lack the most&lt;/strong&gt;. Not surprising, considering we used to just work with a long list of objects sorted by type and ID.&lt;/p&gt;

&lt;p&gt;Let’s say I open a file like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/enum-no-namespace.png&quot; alt=&quot;Enum without namespace&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Where does this Enum belong? Who knows…&lt;/em&gt; I have to go &lt;strong&gt;through the references&lt;/strong&gt; to figure that out.&lt;/p&gt;

&lt;p&gt;But if it has a namespace defined:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/enum-yes-namespace.png&quot; alt=&quot;Enum with namespace&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I can quickly see it’s &lt;strong&gt;part of the Stock APIs functionality&lt;/strong&gt;. And you’re right, if I only care about the &lt;strong&gt;code discoverability&lt;/strong&gt;, then I could just look at the folder structure where the &lt;em&gt;Document Type&lt;/em&gt; file is placed and get the same idea, &lt;strong&gt;I don’t &lt;em&gt;need&lt;/em&gt; namespaces for that.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But structuring your codebase and making it discoverable is just &lt;strong&gt;one of the benefits of namespaces&lt;/strong&gt;, while it’s the &lt;strong&gt;only benefit&lt;/strong&gt; if you use &lt;strong&gt;folders as the only method&lt;/strong&gt;. That’s why we should do &lt;strong&gt;both&lt;/strong&gt;. Organize code in folders and use namespaces. It makes the project easily discoverable, but also unlocks other benefits of namespaces like &lt;strong&gt;dependency analysis&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;dependency-analysis&quot;&gt;Dependency Analysis&lt;/h4&gt;

&lt;p&gt;Let’s talk about &lt;em&gt;dependency analysis&lt;/em&gt; next. This one has been huge for me lately. It allows us to ensure that &lt;strong&gt;cleanly architected apps remain clean&lt;/strong&gt;. It also helped with &lt;strong&gt;de-tangling&lt;/strong&gt; functionalities in &lt;strong&gt;monolithic apps&lt;/strong&gt; and breaking down those horrible &lt;em&gt;“Management” codeunits&lt;/em&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I’ll assume you already know that when we start adopting namespaces we move from a &lt;strong&gt;&lt;em&gt;global namespace&lt;/em&gt;&lt;/strong&gt;, where we could define any object as a variable, to a &lt;strong&gt;&lt;em&gt;specific namespace&lt;/em&gt;&lt;/strong&gt;, where we can only define objects &lt;em&gt;defined in the same namespace&lt;/em&gt;, &lt;em&gt;fully qualify object names&lt;/em&gt;, or &lt;strong&gt;&lt;em&gt;“import” objects&lt;/em&gt;&lt;/strong&gt; from other namespaces using a &lt;strong&gt;“using” statement&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In other words, we used to be able to do this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/var-declaration-old.png&quot; alt=&quot;Old way of declaring variables&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With namespaces, &lt;em&gt;we can’t&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/var-declaration-namespace-error.png&quot; alt=&quot;Old way breaks when declaring a namespace on the file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unless we do one of the two:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/var-declaration-new.png&quot; alt=&quot;New way of declaring variables&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before we get back to dependency analysis, let’s talk about &lt;strong&gt;which of the two options we should go for&lt;/strong&gt;. &lt;em&gt;Fully qualified name, or the using statement.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We decided to &lt;strong&gt;always go with using statements&lt;/strong&gt; in favor of fully qualified names. &lt;strong&gt;&lt;em&gt;Why?&lt;/em&gt;&lt;/strong&gt; Because it allows us to &lt;strong&gt;easily see dependencies&lt;/strong&gt; at the top of the file (this is the &lt;em&gt;dependency analysis&lt;/em&gt; that we’ll get to in a second). We haven’t found a real use case when we’d prefer to go for &lt;em&gt;fully qualifying names&lt;/em&gt;. In the &lt;em&gt;C# world&lt;/em&gt;, I’d go for fully qualified names if I’m using &lt;strong&gt;two objects that have the same name&lt;/strong&gt; but reside &lt;strong&gt;in different namespaces.&lt;/strong&gt; However, in &lt;strong&gt;AL&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We’re quite used to making &lt;strong&gt;globally unique object names&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;As of now, &lt;strong&gt;can’t define an object with the same name&lt;/strong&gt; in the same app, regardless of namespaces&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;Back to the &lt;strong&gt;&lt;em&gt;dependency analysis&lt;/em&gt;&lt;/strong&gt; now. We now know that anytime we want to define a variable for an object from a different namespace, we have to use a &lt;strong&gt;“using” statement&lt;/strong&gt;. This means that from a quick look, we can see &lt;strong&gt;what other modules our object is tied to.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here’s how a &lt;strong&gt;&lt;em&gt;Sales Header&lt;/em&gt;&lt;/strong&gt; table looks once &lt;em&gt;Microsoft&lt;/em&gt; applied the namespace to it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/sales-header-using.png&quot; alt=&quot;Using statements on Sales Header&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I couldn’t even capture all of them in one screenshot. There are &lt;strong&gt;&lt;em&gt;76&lt;/em&gt;&lt;/strong&gt; of them. &lt;strong&gt;&lt;em&gt;Crazy&lt;/em&gt;&lt;/strong&gt;. Also, a bit &lt;em&gt;ugly&lt;/em&gt;. But at the same time &lt;strong&gt;a good thing!&lt;/strong&gt; At least now &lt;em&gt;Microsoft&lt;/em&gt; has a &lt;strong&gt;high-level overview&lt;/strong&gt; of all the parts that are jammed in the &lt;em&gt;Sales Header&lt;/em&gt; table and can start working towards &lt;strong&gt;extracting irrelevant parts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By &lt;em&gt;irrelevant&lt;/em&gt; I don’t mean that the &lt;em&gt;functionality&lt;/em&gt; is &lt;em&gt;irrelevant&lt;/em&gt;. But does the &lt;em&gt;Sales Header&lt;/em&gt; have to be &lt;strong&gt;coupled to Dataverse?&lt;/strong&gt; Or &lt;em&gt;Outlook?&lt;/em&gt; Doesn’t it feel &lt;em&gt;a bit off?&lt;/em&gt; &lt;strong&gt;Removing Dataverse&lt;/strong&gt; functionality shouldn’t &lt;strong&gt;break sales documents&lt;/strong&gt;. I’m not trying to diss &lt;em&gt;Microsoft’s&lt;/em&gt; code. The base app is old, and there’s a lot of &lt;strong&gt;legacy code&lt;/strong&gt; in there. Here’s how the relationships in the Base App look like today:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/baseapp-web.png&quot; alt=&quot;Spider web of dependencies in the Base App&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To be honest, &lt;strong&gt;&lt;em&gt;we all wrote entangled code&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;like that in the past&lt;/em&gt;. But what I’m trying to say is that with namespaces we can now finally &lt;strong&gt;start spotting these spider webs&lt;/strong&gt;. Both in our &lt;strong&gt;old code&lt;/strong&gt; and when writing &lt;strong&gt;new code&lt;/strong&gt;. Does the latest pull request try to add two &lt;strong&gt;&lt;em&gt;new “using” statements to a management codeunit?&lt;/em&gt;&lt;/strong&gt; Are we creating another &lt;strong&gt;&lt;em&gt;Swiss army knife&lt;/em&gt;&lt;/strong&gt; codeunit? Maybe we should &lt;strong&gt;separate them&lt;/strong&gt; and stick to a &lt;strong&gt;single responsibility&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;naming&quot;&gt;Naming&lt;/h4&gt;

&lt;p&gt;Naming is a &lt;em&gt;very common reason&lt;/em&gt; why we’d want to use namespaces in other languages. As we only ever had a &lt;strong&gt;&lt;em&gt;global namespace&lt;/em&gt;&lt;/strong&gt; in AL (and C/AL), all of our objects had to have &lt;strong&gt;globally unique names&lt;/strong&gt;. That’s why we had a &lt;em&gt;“Sales Header”&lt;/em&gt; and a &lt;em&gt;“Purchase Header”&lt;/em&gt;. If we were in the world of &lt;strong&gt;C#&lt;/strong&gt;, these would likely be &lt;em&gt;Microsoft.Sales.Document.Header&lt;/em&gt; and &lt;em&gt;Microsoft.Purchase.Document.Header&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two &lt;em&gt;“Header”&lt;/em&gt; objects&lt;/strong&gt;, but since they reside in separate namespaces, it’s &lt;strong&gt;not a naming collision&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately, we’re &lt;strong&gt;not there yet with AL&lt;/strong&gt;. Defining two objects with the same name in different namespaces in the same app &lt;strong&gt;produces an error&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/naming-collision.png&quot; alt=&quot;Two objects with the same name produce an error even with different namespaces&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Which is weird to me, since what I can do is &lt;strong&gt;define an object&lt;/strong&gt; with the &lt;strong&gt;same name&lt;/strong&gt; as an object in a &lt;strong&gt;different app&lt;/strong&gt;. Like creating my own &lt;em&gt;Customer&lt;/em&gt; table in my own namespace:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/another-customer.png&quot; alt=&quot;Defining a Customer object in my own app works fine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, &lt;strong&gt;namespaces prevent naming collisions&lt;/strong&gt;, but not in the same app?…
&lt;em&gt;Hopefully, this will work in the future…&lt;/em&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The one naming benefit we however do have is that we don’t have to try and &lt;strong&gt;jam long names in only 30 characters&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s an example from one of the projects: &lt;strong&gt;&lt;em&gt;“MYPETaxFSTBlock”&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;
&lt;em&gt;Any idea what this is? Yeah, me neither.&lt;/em&gt; &lt;em&gt;ETax&lt;/em&gt; and &lt;em&gt;Block&lt;/em&gt; I get, but what’s &lt;em&gt;FST?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, if we had &lt;strong&gt;namespaces&lt;/strong&gt; at the time, this file would likely be&lt;/p&gt;

&lt;p&gt;Namespace MyPublisher.&lt;strong&gt;Banking.ETax.Declaration&lt;/strong&gt; &lt;br /&gt;
Codeunit 50000 “MYPFormStructureTypeBlock”&lt;/p&gt;

&lt;p&gt;By moving the &lt;strong&gt;area&lt;/strong&gt; that this objects belongs to &lt;strong&gt;out of the file name&lt;/strong&gt;, we free up the 30 characters for &lt;strong&gt;actual name of the file&lt;/strong&gt;. This again makes the codebase more &lt;strong&gt;onboarding friendly&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-how-of-namespaces&quot;&gt;The how of namespaces&lt;/h3&gt;

&lt;p&gt;I said I won’t go into the &lt;strong&gt;“how”&lt;/strong&gt; of namespaces, but I want to mention a couple more technical &lt;strong&gt;good-to-knows&lt;/strong&gt; about namespaces&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;how-should-i-structure-namespaces&quot;&gt;How should I structure namespaces?&lt;/h4&gt;

&lt;p&gt;Here’s what we’re using. Again, only a recommendation and a guideline, deviate from it as much as you’d like.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;lt;Publisher&amp;gt;.&amp;lt;AppArea&amp;gt;.FolderStructure&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;em&gt;Companial.Banking.Setup&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;Important!&lt;/em&gt;&lt;/strong&gt; We don’t (and won’t) register namespaces with MS (like we register affixes), so make sure yours are &lt;strong&gt;unique&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;The first part&lt;/strong&gt; should be your &lt;strong&gt;&lt;em&gt;publisher’s name&lt;/em&gt;&lt;/strong&gt; to ensure the &lt;strong&gt;namespace is unique&lt;/strong&gt; from other partners.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The second part&lt;/strong&gt; is the &lt;strong&gt;&lt;em&gt;App area&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;Not the App name mind you&lt;/strong&gt;. We try to find a more &lt;em&gt;generic&lt;/em&gt; name. Mainly, so that if we’d ever move an object to a different extension, we don’t end up with an object that has a &lt;strong&gt;very app specific namespace&lt;/strong&gt; and would &lt;em&gt;“stick out”&lt;/em&gt;. This point is &lt;strong&gt;very applicable to monoliths&lt;/strong&gt; that we’ll want to break down into smaller apps.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;The third part&lt;/strong&gt; is then the &lt;strong&gt;folder structure&lt;/strong&gt;. The actual &lt;em&gt;path&lt;/em&gt; of the file. This ensures files are &lt;strong&gt;easily discoverable&lt;/strong&gt; by following the namespace.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For comparison, here’s &lt;em&gt;Microsoft’s&lt;/em&gt; recommendation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/ms-namespace-structure.png&quot; alt=&quot;Microsoft&apos;s namespace naming suggestion&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Whatever you do, please &lt;strong&gt;don’t just add one namespace to every object in your project&lt;/strong&gt;. Unless your project has &lt;em&gt;less than 25 objects&lt;/em&gt;, I believe you have &lt;strong&gt;multiple areas&lt;/strong&gt; hiding in there.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;how-to-ensure-i-dont-forget-to-add-namespaces&quot;&gt;How to ensure I don’t forget to add namespaces?&lt;/h4&gt;

&lt;p&gt;There’s a &lt;strong&gt;CodeCop warning (&lt;em&gt;AA0247&lt;/em&gt;)&lt;/strong&gt; we can use to help us spot missing namespaces. It’s &lt;strong&gt;disabled by default&lt;/strong&gt;, so we have to raise it’s severity in the &lt;strong&gt;&lt;em&gt;ruleset.json&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/namespace-warning.png&quot; alt=&quot;Warning for missing namespaces&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;when-should-i-not-adopt-namespaces&quot;&gt;When should I not adopt namespaces?&lt;/h4&gt;

&lt;p&gt;If you’re app has a &lt;strong&gt;dependency on another app that has not yet adopted namespaces&lt;/strong&gt;. Do not add namespaces to your objects in these cases as &lt;strong&gt;your app will break&lt;/strong&gt; once the dependency adopts them. Let me quickly show you &lt;strong&gt;why&lt;/strong&gt;:&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;heres-the-happy-path&quot;&gt;Here’s the &lt;em&gt;happy path&lt;/em&gt;:&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;App A&lt;/em&gt; depends on &lt;em&gt;App B&lt;/em&gt;. &lt;strong&gt;No namespaces are used.&lt;/strong&gt; Everything works.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/dependency-both-global.png&quot; alt=&quot;Two objects, both in global namespace&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dependency (&lt;em&gt;App B&lt;/em&gt;) introduces a namespace. &lt;strong&gt;No issues in &lt;em&gt;App A&lt;/em&gt;&lt;/strong&gt;, as we’re still using the &lt;strong&gt;global namespace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/dependency-namespace-first.png&quot; alt=&quot;Dependency introduces namespaces&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;App A&lt;/em&gt; now introduces namespaces&lt;/strong&gt; and at the same time has to &lt;strong&gt;add a using statement&lt;/strong&gt; for the dependency codeunit and can compile against the new version of the &lt;em&gt;App B&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/dependency-main-namespace-second.png&quot; alt=&quot;Main app now introduces namespaces&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;now-the-unhappy-path&quot;&gt;Now the unhappy path:&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;App A&lt;/em&gt; is the first to define a namespace and everything works since the &lt;strong&gt;Dependency is still in the global namespace&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/dependency-main-namespace-first.png&quot; alt=&quot;Main app introduces namespaces first&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But now when &lt;em&gt;App B&lt;/em&gt; adds a namespace, &lt;strong&gt;&lt;em&gt;App A&lt;/em&gt; is broken&lt;/strong&gt; and cannot work with the new version of App B&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/dependency-namespace-second.png&quot; alt=&quot;Dependency introduces namespaces second&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The problem is, that &lt;strong&gt;you don’t know when your dependencies will adopt namespaces&lt;/strong&gt;, so I’d personally &lt;strong&gt;avoid them until all dependencies are namespaces&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In all other cases, I’d say &lt;strong&gt;go for it!&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;is-adding-a-namespace-a-breaking-change&quot;&gt;Is adding a namespace a breaking change?&lt;/h4&gt;

&lt;p&gt;No. Yes, we’ve seen how it can break dependencies, but it’s not a breaking change in the sense of the &lt;strong&gt;AppSource validation&lt;/strong&gt;. You can add namespaces to your objects and still pass the validation.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;where-can-i-learn-more-about-namespaces&quot;&gt;Where can I learn more about namespaces?&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=F8NH69BGnKk&quot;&gt;The recording&lt;/a&gt;&lt;/strong&gt; of &lt;em&gt;Microsoft’s&lt;/em&gt; session is a &lt;strong&gt;must-watch&lt;/strong&gt; if you’d like to see how they approached the challenge of &lt;strong&gt;namespacing the whole base app&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s a few common questions they answered in the session:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/namespaces/rapid-fire-questions.png&quot; alt=&quot;Rapid Fire Questions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And of course, the &lt;strong&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-namespaces-overview&quot;&gt;official documentation&lt;/a&gt;&lt;/strong&gt; is always a good place to start.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;so-is-it-time-to-use-namespaces-and-should-i-now-go-and-namespace-my-huge-monolithic-app&quot;&gt;So, is it time to use namespaces and should I now go and namespace my huge monolithic app?&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Is it time to use namespaces?&lt;/em&gt; &lt;strong&gt;Absolutely.&lt;/strong&gt; Small apps, new apps, greenfield apps, all should start using namespaces. They bring a lot of benefits, and I believe they’re a &lt;strong&gt;step towards a cleaner codebase&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But should you go and refactor your huge monolithic app to use namespaces?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Probably not.&lt;/em&gt;&lt;/strong&gt; I mean, yes, there are benefits to using namespaces, but if you have a huge project, it will take you &lt;strong&gt;a long time to properly segregate objects&lt;/strong&gt; into namespaces areas. Unless you have enough time to do it properly, I’d postpone it. Again, &lt;strong&gt;adding a single namespace across the whole project is not a good idea.&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Sep 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/namespaces/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/namespaces/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Conferences are awesome! Here&apos;s a quick recap...</title>
        <description>&lt;p&gt;I’m about to go off on a longer vacation, but there’s one more post I wanted to make before I go offline. I was partially inspired by &lt;a href=&quot;https://nataliekarolak.wordpress.com/2024/06/16/waking-up-after-the-bc-techdays-2024/&quot;&gt;Natalie’s non-technical post&lt;/a&gt; right after BC Tech Days about her experience there, and I wanted to do the same, but for the full spring conference swing.&lt;/p&gt;

&lt;p&gt;I was lucky enough to participate in &lt;strong&gt;&lt;em&gt;6&lt;/em&gt; (six!)&lt;/strong&gt; events in the past 4 months. &lt;em&gt;Days of Knowledge (DOK) UK, DOK Nordic, Directions NA, Dynamics Minds, DOK Central, and BC Tech Days&lt;/em&gt;. I loved every second of them. But even for this &lt;strong&gt;&lt;em&gt;“youngling”&lt;/em&gt;&lt;/strong&gt;, that was a lot of traveling, and I’m taking a more relaxed approach to summer.&lt;/p&gt;

&lt;p&gt;I was thinking a bit about how I wanted to structure this post. I want to &lt;strong&gt;present the events&lt;/strong&gt; if you may not yet know them, and don’t know if you (or your employees) should attend them. And I also want to &lt;strong&gt;share my takeaways&lt;/strong&gt; from each of them. Now these takeaways might be completely random and highly personal, but to me, that’s the best part about these in-person events. You get to talk to people and at some point, you might hear some &lt;strong&gt;&lt;em&gt;highly&lt;/em&gt; interesting views!&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;days-of-knowledge-tour&quot;&gt;&lt;a href=&quot;https://www.directionsforpartners.com/&quot;&gt;Days of Knowledge Tour&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Days of Knowledge&lt;/em&gt; is a set of events organized by the same amazing people that bring us &lt;strong&gt;Directions EMEA&lt;/strong&gt; (and Asia) every year. However, unlike Directions, these events are entirely &lt;strong&gt;focused on upskilling people&lt;/strong&gt;. There are three tracks of sessions running in parallel. Developer, consultant, and Power Platform track. I’ve been speaking at three events this year; &lt;em&gt;UK, Nordics (Denmark), and Central (Germany)&lt;/em&gt;, but &lt;strong&gt;there’s another one happening in the US (Atlanta) in September&lt;/strong&gt;, and you can still register for it &lt;strong&gt;&lt;a href=&quot;https://www.directionsforpartners.com/conferences-and-events/days-of-knowledge/americas-2024/program&quot;&gt;here.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I love the concept!&lt;/strong&gt; Bringing deeper knowledge (plenty of &lt;em&gt;level 300 or 400 sessions&lt;/em&gt;) than what you’d get at Directions, and for a &lt;strong&gt;lower price&lt;/strong&gt;. I wish there were even more events in the upcoming years, so more people could experience it. But as we’ve already noticed this year, with the growing number of events in the BC sphere, it’s &lt;strong&gt;taking a toll on speakers&lt;/strong&gt;, as they have to travel quite a lot.&lt;/p&gt;

&lt;p&gt;My take is that there’s &lt;strong&gt;no better event for consultants&lt;/strong&gt; than &lt;em&gt;Days of Knowledge&lt;/em&gt;. But also for developers, who want to understand more of the functional and Power Platform side. I think &lt;strong&gt;more often should developers&lt;/strong&gt; try and &lt;strong&gt;understand the functional side&lt;/strong&gt;, it makes us better. Here we can, with a dedicated track for non-development sessions. I’m not saying that developer sessions are not great, but the functional track is why you should consider sending developers to other events than simply Tech Days.&lt;/p&gt;

&lt;p&gt;Some interesting things I’ve heard or seen at DOK events that made me go &lt;em&gt;“huh”&lt;/em&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Being &lt;strong&gt;natively fluent in English&lt;/strong&gt; can be a huge boost in how your session turns out&lt;/li&gt;
  &lt;li&gt;Most AL developers are &lt;strong&gt;not technical&lt;/strong&gt; (by education)&lt;/li&gt;
  &lt;li&gt;It’s hard to present details if people don’t know the basics&lt;/li&gt;
  &lt;li&gt;This one was interestingly controversial. &lt;strong&gt;Don’t be passionate about AL.&lt;/strong&gt; AL is a language that pays our bills. If you want to be passionate about technology, find a side project where you can be creative.&lt;/li&gt;
  &lt;li&gt;Don’t run Power Automate flows on &lt;strong&gt;user accounts&lt;/strong&gt;. You fire a guy, and half the integrations stop working.&lt;/li&gt;
  &lt;li&gt;The delivery of a topic is as (if not more) important as the content itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are some of the people that made these events &lt;strong&gt;fun!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/doknordic.jpg&quot; alt=&quot;DOK Nordic speakers&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/dokcentral.png&quot; alt=&quot;DOK Central speakers&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;directions-north-america&quot;&gt;&lt;a href=&quot;https://directionsna.com/&quot;&gt;Directions North America&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;I doubt Directions North America needs an introduction. It’s been around for a while. I also don’t have much of a recommendation of who should you send to these events. I’ll mainly share my &lt;em&gt;“huh”&lt;/em&gt; moments, but before I get there, here are a couple of things I found…&lt;strong&gt;different&lt;/strong&gt;, compared to Directions EMEA.&lt;/p&gt;

&lt;p&gt;Look at these statistics they shared (disregard the yellow lines, those were for entertainment purposes):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/dna-statistics.jpg&quot; alt=&quot;Directions NA attendee statistics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When I saw these numbers, I was mainly surprised by two parts. The &lt;strong&gt;age of participants, and their role.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two-thirds&lt;/strong&gt; of the participants were &lt;strong&gt;over 40&lt;/strong&gt;. I know there are probably a lot of actual reasons for that (it’s an expensive event, it’s a commercial event, …), but as someone who sees these conferences as the main reason why I decided to stay in this industry, &lt;em&gt;I felt uneasy.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I want more younglings here! :D&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Close to &lt;strong&gt;three-quarters&lt;/strong&gt; of attendees were in &lt;strong&gt;Sales and Leadership&lt;/strong&gt; positions. You could feel that in the sessions as well, they were &lt;em&gt;less attended&lt;/em&gt;. I get that Europe has more of a &lt;em&gt;“builder”&lt;/em&gt; mindset, while the US prefers to buy solutions, okay, fine. But still, &lt;strong&gt;where do your people then get upskilled&lt;/strong&gt; if not at these kinds of events?&lt;/p&gt;

&lt;p&gt;Some &lt;em&gt;“huh”&lt;/em&gt; moments:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Copilots are everywhere.&lt;/strong&gt; It’s not that long since it was introduced, and partners are &lt;strong&gt;already trailing&lt;/strong&gt; regarding AI knowledge.&lt;/li&gt;
  &lt;li&gt;MS is hesitant to &lt;strong&gt;publicly&lt;/strong&gt; announce what they’re doing, but when approached individually they’re happy to share the direction in which they’re going.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/dna.jpg&quot; alt=&quot;Directions North America Speakers&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;dynamicsminds&quot;&gt;&lt;a href=&quot;https://www.dynamicsminds.com/&quot;&gt;DynamicsMinds&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;This is probably the most &lt;strong&gt;“under the radar”&lt;/strong&gt; event in the BC sphere. But it shouldn’t be. It’s a fairly small event (if you can call 1250 attendees small) in Portorož, Slovenia, aimed at the &lt;strong&gt;full D365 stack (FO, CE, PP, BC).&lt;/strong&gt; It’s a brilliant event! Organization-wise, second to none. It’s hard to describe what makes it so amazing. The attention to detail, the creativity behind the keynote, the fact that MS only gets 5 minutes per product for their sales pitch during the keynote, the location, the food, … it’s probably just all of the above.&lt;/p&gt;

&lt;p&gt;When I was sharing everything they did to ensure speakers had a good time, someone summed it up perfectly: &lt;em&gt;“It’s &lt;strong&gt;not that you expect&lt;/strong&gt; that they would do all these things for you, &lt;strong&gt;but they do them anyway&lt;/strong&gt;”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;If you want to experience an event like no other, this is the place to go. But even though, I’m &lt;strong&gt;highly supportive&lt;/strong&gt; of this event, there is something to consider when you’re deciding who should attend it.&lt;/p&gt;

&lt;p&gt;If you have practices that work with FO, CE, or PP, &lt;strong&gt;stop thinking, and send them all&lt;/strong&gt;. How many other events do you have that &lt;strong&gt;cater to FO?&lt;/strong&gt; But if your focus is primarily BC, my recommendation is to send more architect or manager-level people. There’s so much you can learn from where other parts of D365 are evolving. But if you’re &lt;strong&gt;only looking for BC&lt;/strong&gt; sessions, you might sometimes &lt;strong&gt;struggle&lt;/strong&gt; with what to listen to. Especially if you’re used to BC events where you have multiple sessions specifically for BC in each time slot.&lt;/p&gt;

&lt;p&gt;I’m super sure that this event will sell out next year, so if you’re interested, get your tickets early.&lt;/p&gt;

&lt;p&gt;Some &lt;em&gt;“huh”&lt;/em&gt; moments from this one:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There’s so much &lt;strong&gt;more to Power Platform&lt;/strong&gt; than what we &lt;em&gt;“the BC”&lt;/em&gt; people are aware of&lt;/li&gt;
  &lt;li&gt;PP has a hard time working with BC due to the &lt;strong&gt;&lt;em&gt;“we can solve it in BC”&lt;/em&gt; mentality&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/dynamicsminds.jpg&quot; alt=&quot;Dynamics Minds speakers&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;bc-techdays&quot;&gt;&lt;a href=&quot;https://www.bctechdays.com/event&quot;&gt;BC TechDays&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Another event that needs no introduction. &lt;strong&gt;The crown jewel&lt;/strong&gt; if you’re a BC developer. BC Tech Days was the &lt;strong&gt;first conference I ever attended&lt;/strong&gt;. Two years ago, I was that unsure developer, standing in the corner somewhere, not really knowing what to do during coffee breaks. Fast forward two years, and I couldn’t believe just &lt;strong&gt;how fast the event passed by&lt;/strong&gt;. So many people to meet, so many people to talk to.&lt;/p&gt;

&lt;p&gt;To me, this was also &lt;strong&gt;the most demanding event&lt;/strong&gt; to prepare for. My sessions are usually &lt;em&gt;45 minutes&lt;/em&gt; long, this was the first time I did a &lt;em&gt;90-minute&lt;/em&gt; one, and boy did it take some prep time… &lt;strong&gt;It was all worth it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the great things about BC TechDays is that &lt;strong&gt;all sessions are recorded&lt;/strong&gt;, so if you’d like to check out what I was talking about, you can find it &lt;strong&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=v-EaIJ0f9tU&quot;&gt;here&lt;/a&gt;.&lt;/strong&gt; And you can find all the other recordings &lt;a href=&quot;https://www.youtube.com/mibusocom&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The only &lt;em&gt;“huh”&lt;/em&gt; moment I took from this one, which isn’t even that surprising, is:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;This community and its people are awesome!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/conferencerecap24/techdays.jpg&quot; alt=&quot;BC Tech Days fun people&quot; style=&quot;display:block; margin-left:auto; margin-right:auto&quot; width=&quot;600&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, so now you know a little bit about the sessions you should attend next year. Here’s a quick recap of my take on the target audiences:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Days of Knowledge&lt;/strong&gt; – Awesome event for upskilling consultants and especially Senior Developers wanting to broaden their functional or PP knowledge.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Directions NA&lt;/strong&gt; – Sales &amp;amp; Leadership mainly, but there are a lot of cool sessions as well&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DynamicsMinds&lt;/strong&gt; – One-of-a-kind conference experience. Content is best suited for Architects, cross-product developers, D365 people, and Leadership&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;BC Tech Days&lt;/strong&gt; – Developer’s favorite. BC Developers of all levels&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;This conference season was a blast for me. I already knew &lt;strong&gt;I loved sharing knowledge&lt;/strong&gt; and doing sessions last year, but this year truly &lt;strong&gt;cemented it&lt;/strong&gt;. I put a lot of effort into my sessions.&lt;/p&gt;

&lt;p&gt;Before I ever started doing conference sessions, I talked with one of the &lt;strong&gt;greats in our industry&lt;/strong&gt; about just how much time it takes them to prepare sessions. The answer was 50 - 100 hours depending on the session. That made me realize from the beginning that &lt;strong&gt;great content and great delivery take time&lt;/strong&gt;, and I’m more than willing to put that time in. I delivered a total of &lt;strong&gt;&lt;em&gt;12 sessions&lt;/em&gt;&lt;/strong&gt; at these events with an average &lt;strong&gt;speaker rating of 4.92/5&lt;/strong&gt; and a &lt;strong&gt;content rating of 4.76/5&lt;/strong&gt; out of roughly 200 ratings. I’m proud of these numbers. It means the time was well spent, the audience enjoyed it, and &lt;strong&gt;it all becomes worth it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you’re ever sitting in a conference session, I want you to &lt;strong&gt;leave a rating and a comment&lt;/strong&gt;. If you liked it, the &lt;strong&gt;good comments stay with a speaker like a long-lasting applause&lt;/strong&gt;. If you think there’s something to improve, comment as well. I believe my session at BC Tech Days turned out as well as it did mainly &lt;strong&gt;because I received constructive feedback&lt;/strong&gt; on previous events. That’s how I knew what content the audience was missing, that I should interact with them more, and that everyone likes memes, and I should include more. :P&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, enough. Now you know what cool events are out there and you should definitely look out for them next year! Now, it’s time for me to pack and &lt;strong&gt;take some time off.&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Jul 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/spring-conf-recap/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/spring-conf-recap/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>BC Online has new operational limits! Here&apos;s how to make the most out of them...</title>
        <description>&lt;p&gt;While in &lt;em&gt;San Diego&lt;/em&gt; for &lt;a href=&quot;https://directionsna.com/&quot;&gt;Directions NA&lt;/a&gt; I attended a couple of sessions held by &lt;a href=&quot;https://www.linkedin.com/in/swinarko&quot;&gt;Sandy Winarko&lt;/a&gt; on &lt;strong&gt;new operational limits for Job and API limits in BC Online&lt;/strong&gt;. I think it’s great that they’re working on making the cloud more appealing, but to make the most out of the new limits we have to change how we run jobs or integrate with BC. &lt;em&gt;How?&lt;/em&gt; We’ll get to that in the second part, let’s first talk about what changed.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;new-schedule-task-limits&quot;&gt;New schedule task limits&lt;/h3&gt;

&lt;p&gt;Let’s start with the &lt;em&gt;scheduled tasks&lt;/em&gt; more commonly known as &lt;em&gt;job queue entries&lt;/em&gt;. &lt;strong&gt;Previously&lt;/strong&gt;, the maximum number of concurrent jobs that could run simultaneously was &lt;strong&gt;3&lt;/strong&gt;. That was a hard limit set &lt;strong&gt;per environment&lt;/strong&gt;. Three concurrent jobs were not enough, especially if multiple companies needed to run scheduled jobs. They have now changed this limit from 3-per-environment to &lt;strong&gt;5-per-user&lt;/strong&gt;. This means that I can now schedule &lt;strong&gt;10 jobs to run simultaneously&lt;/strong&gt;, as long as &lt;strong&gt;5 jobs&lt;/strong&gt; are scheduled by &lt;strong&gt;User1&lt;/strong&gt; and &lt;strong&gt;5&lt;/strong&gt; by &lt;strong&gt;User2&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;This is an important detail&lt;/em&gt;&lt;/strong&gt;. &lt;strong&gt;More users&lt;/strong&gt; means &lt;strong&gt;more parallel jobs&lt;/strong&gt;, but not if all jobs are scheduled by a single user. The limit is per user, so different users need to schedule jobs to make use of this higher limit, otherwise 5 jobs will be executed and others will wait.&lt;/p&gt;

&lt;p&gt;Now this is annoying, especially since it’s not uncommon to have &lt;strong&gt;just one person responsible for scheduling jobs&lt;/strong&gt;. However, we can take advantage of these new limits as they &lt;strong&gt;also apply to S2S users&lt;/strong&gt;. Something I was playing around with is, that I registered multiple &lt;em&gt;Entra Applications&lt;/em&gt; in BC, and created an action on the &lt;em&gt;Job Queue Entry Card&lt;/em&gt; to schedule the job as a &lt;em&gt;System user&lt;/em&gt;. More on that in the second part.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;new-odata-request-limits&quot;&gt;New OData request limits&lt;/h3&gt;

&lt;p&gt;Similarly, the OData limits also got a refresh from per-environment to per-user limits. Let’s first take a look at the old limits.&lt;/p&gt;

&lt;p&gt;We could send &lt;strong&gt;up to 600 requests per minute&lt;/strong&gt; (300 for sandbox environments), of which &lt;strong&gt;5 were concurrently processed&lt;/strong&gt;, the rest piled in a queue of up to 95. When the queue was full, &lt;em&gt;429 - Too Many Requests&lt;/em&gt; was returned.&lt;/p&gt;

&lt;p&gt;First, the change in rate limits. It changed from 600 per minute to &lt;strong&gt;6000 per 5 minutes&lt;/strong&gt;. Meaning, we can now have &lt;strong&gt;higher peaks&lt;/strong&gt; of requests as long as they’re not too close together.&lt;/p&gt;

&lt;p&gt;The new concurrency limit is again per user. Say we have &lt;strong&gt;5 users&lt;/strong&gt;, we can have &lt;strong&gt;25 OData requests processed concurrently&lt;/strong&gt; if they’re coming in as 5 different users. This also means we have 5 queues where the requests will wait. But the same &lt;strong&gt;&lt;em&gt;“important detail”&lt;/em&gt;&lt;/strong&gt; applies here. Just because we have 5 users in our environment doesn’t mean we can process 25 parallel requests. &lt;strong&gt;&lt;em&gt;They will only be processed in parallel if they come in as 5 different users.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I personally always built integrations with BC by creating an Entra App Registration and sending all the requests as this one user, but to make use of this additional throughput, I started looking into &lt;strong&gt;distributing the requests across multiple Entra Applications&lt;/strong&gt; and thus benefiting from parallel processing. More on that in the second part.&lt;/p&gt;

&lt;p&gt;You can read more about the new operational limits &lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/administration/operational-limits-online&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;But now let’s jump into &lt;strong&gt;how to make the most of the new limits&lt;/strong&gt;. I would like to add that I’m &lt;strong&gt;not a fan&lt;/strong&gt; of these session-hacking approaches. &lt;em&gt;Should we really be doing this?&lt;/em&gt; Microsoft said yes, but honestly if they’re giving us &lt;strong&gt;additional capacity per user&lt;/strong&gt;, why add this (&lt;em&gt;maybe stupid&lt;/em&gt;) limitation that it also needs to be &lt;strong&gt;consumed per user?&lt;/strong&gt; Is it really &lt;em&gt;additional capacity per user&lt;/em&gt;, when we can create an &lt;strong&gt;unlimited amount of Entra Application users&lt;/strong&gt;? I have a feeling this will &lt;strong&gt;change again soon&lt;/strong&gt;, as this is more of a workaround than an architectural approach. But hey, &lt;strong&gt;sometimes workarounds are needed&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;schedule-a-job-as-an-s2s-user&quot;&gt;Schedule a Job as an S2S user&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Okay, I can achieve higher throughput by scheduling jobs as different users. But scheduling jobs is my responsibility, I don’t want to go around asking people to schedule jobs for me…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;To solve this, I started playing around with the functionality that would allow me to &lt;strong&gt;schedule a job as a system user&lt;/strong&gt;, using one of the S2S application users. To get there, I created a couple of app registrations&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/entra-apps.png&quot; alt=&quot;Entra Applications&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve added two new fields to the card, to specify if the application should be &lt;strong&gt;used for scheduling jobs&lt;/strong&gt; and its &lt;strong&gt;client secret&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/entra-app-card.png&quot; alt=&quot;Entra Application Card&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I can go and create a new Job Queue Entry as I normally would. Once I set it up the way I want it, I have a new action to &lt;strong&gt;schedule the task as a System User&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/schedule-job-card.png&quot; alt=&quot;Schedule a new job&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the action is executed, the job is scheduled as one of the &lt;strong&gt;available Entra App users&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/scheduled-job.png&quot; alt=&quot;Job scheduled as S2S user&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s take a look at what’s happening in the &lt;em&gt;background&lt;/em&gt; when the action is executed.&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;&lt;em&gt;tl;dr&lt;/em&gt;&lt;/strong&gt; is, the action &lt;strong&gt;finds an Entra App&lt;/strong&gt; with the least number of scheduled jobs assigned to it and &lt;strong&gt;calls a BC API to schedule the selected job&lt;/strong&gt; as this Entra App. But let’s still look at the code a bit.&lt;/p&gt;

&lt;p&gt;The action calls this &lt;em&gt;EnqueueJob&lt;/em&gt; procedure:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/enqueue-job.png&quot; alt=&quot;Enqueue job procedure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check Web Service&lt;/em&gt; simply ensures that my API for enqueuing jobs is &lt;strong&gt;published&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/check-web-service.png&quot; alt=&quot;Check Web Service Procedure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the API that will &lt;strong&gt;schedule the job&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/enqueue-job-api.png&quot; alt=&quot;Enqueue job API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Find Least Loaded App&lt;/em&gt; finds the Entra Application with the &lt;strong&gt;least amount of Job Queue Entries assigned&lt;/strong&gt; to it. Only Entra Applications that are set up for Job Queue scheduling are considered. Currently, it just looks over all the job queue entries. The next step would be to take the scheduled period into account. If the new job should be scheduled for &lt;em&gt;Monday morning&lt;/em&gt;, then I’m only interested in Entra Apps that are least loaded on &lt;em&gt;Monday morning&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/scheduled-job-query.png&quot; alt=&quot;Find least loaded app query&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I won’t get into the details of &lt;em&gt;GetToken&lt;/em&gt; and &lt;em&gt;SendRequest&lt;/em&gt;, one retrieves an &lt;em&gt;AccessToken&lt;/em&gt; from &lt;em&gt;Entra&lt;/em&gt; for the given app, and the other builds and sends a request to the above-mentioned API. If you’d like to see the &lt;strong&gt;full source&lt;/strong&gt; for this example, you can find it &lt;a href=&quot;https://github.com/tinestaric/BCExamples/tree/Master/ScheduleJobsAsS2S&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This approach now lets me take full advantage of &lt;strong&gt;new concurrency limits&lt;/strong&gt; by simply adding &lt;strong&gt;more Entra Applications&lt;/strong&gt; as needed and scheduling the jobs under these apps.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;integrate-with-bc-online-using-a-s2s-user-pool&quot;&gt;Integrate with BC Online using a S2S user pool&lt;/h3&gt;

&lt;p&gt;So we know how to make the most out of the new scheduled tasks concurrency limits. &lt;strong&gt;&lt;em&gt;What about OData?&lt;/em&gt;&lt;/strong&gt; Well, to make the most out of this one, we’ll have to &lt;strong&gt;change the way we authenticate our requests&lt;/strong&gt; that go to BC. As mentioned earlier, in the past, we created an &lt;strong&gt;Entra App&lt;/strong&gt; and used this app &lt;strong&gt;for all requests&lt;/strong&gt;. Now, we should instead introduce an &lt;strong&gt;app pool&lt;/strong&gt;, and &lt;strong&gt;distribute&lt;/strong&gt; our requests &lt;strong&gt;across many Entra Apps&lt;/strong&gt;. I built a simple example in &lt;strong&gt;C#&lt;/strong&gt; to show how this can be used. You can find the &lt;strong&gt;full source code&lt;/strong&gt; &lt;a href=&quot;https://github.com/tinestaric/BCExamples/tree/Master/CallApiWithUserPool&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Again, a quick &lt;strong&gt;&lt;em&gt;tl;dr&lt;/em&gt;&lt;/strong&gt; first. The program initializes a &lt;em&gt;User Pool Manager&lt;/em&gt; with my &lt;em&gt;Entra Applications&lt;/em&gt;, creates an &lt;em&gt;Api Service&lt;/em&gt; using this pool manager, and then when calling the API, it will &lt;strong&gt;rotate the Entra applications&lt;/strong&gt; used in authentication in a &lt;strong&gt;round-robin manner&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Keep in mind, that this is only a &lt;em&gt;quick demo&lt;/em&gt;, so there are many shortcomings. Don’t hardcode secrets, don’t request a new token each time, as they’re valid for a longer period, … But I hope this example still illustrates how we can &lt;strong&gt;rotate S2S users for request authentication&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here’s the &lt;em&gt;Main class&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/main-class.png&quot; alt=&quot;Main Class for integrating with user pool&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;S2SUser&lt;/em&gt; is just a simple class to contain credentials&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/s2s-class.png&quot; alt=&quot;S2S User Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;UserPoolManager&lt;/em&gt; manages the pool of users and rotates them&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/user-pool-manager.png&quot; alt=&quot;User Pool Manager Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;ApiService&lt;/em&gt; is where we then actually call the API using a &lt;strong&gt;different user every time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/operationallimits/api-service.png&quot; alt=&quot;Api Service Class&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using this approach, I can now shoot calls off to BC and have &lt;strong&gt;15 requests processed in parallel&lt;/strong&gt; instead of the usual 5. If I’d need even more throughput, I’d create &lt;strong&gt;more Entra Apps&lt;/strong&gt;, and &lt;strong&gt;spread the load across&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;One final thing to keep in mind. At some point, &lt;em&gt;Microsoft&lt;/em&gt; will introduce &lt;strong&gt;global limits or “quotas”&lt;/strong&gt;, so this &lt;em&gt;“free performance”&lt;/em&gt; won’t scale &lt;em&gt;forever&lt;/em&gt;, but at this point, they haven’t yet decided on the quotas. Once they’re in place, the &lt;strong&gt;docs will be updated&lt;/strong&gt; accordingly. But overall, It’s great seeing improvements on the infrastructure side of BC. I hope we’ll move away from having to abuse multiple sessions, but anyway, looking forward to what’s coming next.&lt;/p&gt;

</description>
        <pubDate>Wed, 24 Apr 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/new-operational-limits/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/new-operational-limits/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Exploring the new Release Wave as a Department - The Blueprint</title>
        <description>&lt;h3 id=&quot;a-new-release-is-on-the-streets-yay&quot;&gt;A new release is on the streets! Yay!&lt;/h3&gt;

&lt;p&gt;I like new stuff, it’s exciting. But a &lt;strong&gt;Release Wave every 6 months&lt;/strong&gt;, even if it’s not the biggest wave, makes it difficult for us as a &lt;em&gt;Business Central&lt;/em&gt; department to &lt;strong&gt;stay up to date&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Usually, it comes down to individuals taking their time to investigate &lt;strong&gt;&lt;em&gt;what’s new&lt;/em&gt;&lt;/strong&gt;, and maybe sharing with a couple of colleagues &lt;em&gt;over a coffee&lt;/em&gt;. But that wasn’t the best approach, as not everyone took the time to look into the release notes, and even if we did, we usually focused on things that &lt;em&gt;sounded&lt;/em&gt; interesting to us. That means, we know what the new topics in &lt;strong&gt;development&lt;/strong&gt; are, but &lt;em&gt;Power Platform? Governance? Reporting? &lt;strong&gt;Eh, not my area…&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Turns out, the longer you ignore &lt;em&gt;“not my area”&lt;/em&gt; topics, the more difficult it becomes to pick them up when a project rolls around that needs to leverage the &lt;em&gt;Power Platform&lt;/em&gt; for example. This wasn’t the best approach, so for this release, we decided to take a &lt;strong&gt;more structured approach&lt;/strong&gt; to how we’re going to stay on top of everything &lt;em&gt;Microsoft&lt;/em&gt; released. And hence, here’s &lt;strong&gt;&lt;em&gt;“The Blueprint”&lt;/em&gt;&lt;/strong&gt; of how we went about it. &lt;em&gt;Is it the best way?&lt;/em&gt; &lt;strong&gt;&lt;em&gt;We don’t know yet.&lt;/em&gt;&lt;/strong&gt; It worked out pretty okay this time, but we’ll know when &lt;strong&gt;future releases start rolling out.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-problems-we-wanted-to-solve&quot;&gt;The problems we wanted to solve:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;How do we explore &lt;strong&gt;ALL&lt;/strong&gt; the topics of a new release&lt;/li&gt;
  &lt;li&gt;How do we share the findings with the &lt;strong&gt;whole department&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;How do we ensure that &lt;strong&gt;knowledge is retained&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we could go for &lt;em&gt;Directions for Partners&lt;/em&gt; &lt;a href=&quot;https://community.directions4partners.com/news/1923113&quot;&gt;What’s new webinar&lt;/a&gt; or &lt;em&gt;Companial’s&lt;/em&gt; &lt;a href=&quot;https://companial.com/webinars/microsoft-dynamics-365-business-central-2024-release-wave-1/&quot;&gt;overview of functional and technical enhancements&lt;/a&gt;. But as great of an overview as these two webinars provide, they still &lt;strong&gt;only scratch the surface&lt;/strong&gt;, and as a department we don’t have any &lt;strong&gt;hands-on experience&lt;/strong&gt; with the new topics. So we needed something more.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;heres-our-approach&quot;&gt;Here’s our approach&lt;/h3&gt;
&lt;p&gt;We built a team of 6 people, all experienced, but not only seniors, who were tasked with exploring the new release and we broke the &lt;strong&gt;&lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/release-plan/2024wave1/smb/dynamics365-business-central/planned-features&quot;&gt;release plan&lt;/a&gt;&lt;/strong&gt; down into 6 topics, one for each:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Power Platform&lt;/li&gt;
  &lt;li&gt;Application, Country and Regional, Legislation&lt;/li&gt;
  &lt;li&gt;Copilot and AI innovation&lt;/li&gt;
  &lt;li&gt;Development&lt;/li&gt;
  &lt;li&gt;Governance and administration&lt;/li&gt;
  &lt;li&gt;Reporting and data analysis, user experiences&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some topics are bigger than others. We approached it in two ways. If an area was too big, someone with a smaller area took some of the topics. The alternative was, that the person with a smaller area went a &lt;strong&gt;release further back&lt;/strong&gt;, to v23 in this case, and explored what was new there. As mentioned at the start, we weren’t exactly thorough with previous releases, so there are plenty of things to &lt;strong&gt;catch up on&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We decided to spend a day off-site to work on our exploration. Nothing fancy, just away from the office. There’s always an email or a bug waiting otherwise. We scheduled it during &lt;em&gt;Microsoft’s&lt;/em&gt; &lt;strong&gt;&lt;a href=&quot;aka.ms/bcle&quot;&gt;Launch Event&lt;/a&gt;&lt;/strong&gt;, primarily because one of the goals each person had was to &lt;strong&gt;come up with at least 3 questions&lt;/strong&gt; to ask during the &lt;strong&gt;Q&amp;amp;A sessions&lt;/strong&gt;. It’s how we ensured that each one has gone &lt;strong&gt;deep enough&lt;/strong&gt; into the topic and also &lt;strong&gt;critically thought about it&lt;/strong&gt;, &lt;em&gt;what’s missing? What’s the future? What could be clearer?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;During the day, the focus was mainly on launch event videos, documentation and hands-on demos. We had a couple of quick catch-ups to present our findings among ourselves and just brainstorm on potential questions we’d like to get answered. The only preparation we did beforehand was for everyone to set up their &lt;strong&gt;cloud sandboxes&lt;/strong&gt; where we demoed the features.&lt;/p&gt;

&lt;p&gt;After our exploration day had ended, we started preparing for a &lt;strong&gt;90-minute Knowledge Sharing session for the whole department&lt;/strong&gt; we held a week later. We wanted each one to have their time slot, instead of one person presenting everything. Partially so everyone could &lt;strong&gt;hone their presentation skills&lt;/strong&gt;, but also so they become the go-to person for their area. Not like &lt;em&gt;the&lt;/em&gt; go-to person, but just &lt;strong&gt;someone who others can now reach out to&lt;/strong&gt; if they have a question in this area.&lt;/p&gt;

&lt;p&gt;This worked out pretty well. We now have a department that is &lt;em&gt;aware&lt;/em&gt; of new features and &lt;strong&gt;6 people who have a deep understanding&lt;/strong&gt; of new release areas. The plan for the next release is to &lt;strong&gt;rotate them&lt;/strong&gt; and get &lt;strong&gt;6 new people&lt;/strong&gt; diving into the &lt;strong&gt;Release Wave 2&lt;/strong&gt;. That way, we’ll slowly upskill more people into &lt;strong&gt;&lt;em&gt;“off-brand” topics&lt;/em&gt;&lt;/strong&gt; like &lt;em&gt;governance&lt;/em&gt; or &lt;em&gt;data analysis&lt;/em&gt;, and additionally, they’ll have people from the first Wave to discuss topics with.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;lessons-learned&quot;&gt;Lessons learned&lt;/h3&gt;

&lt;p&gt;Things &lt;em&gt;sound&lt;/em&gt; great so far, but here’s a couple of lessons learned that we’ll try to &lt;strong&gt;address next time&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t expect that people will &lt;strong&gt;catch up on 4 years of release waves in 8 hours&lt;/strong&gt;. Keep investigations contained.&lt;/li&gt;
  &lt;li&gt;People can get caught on a single topic for a full day. &lt;strong&gt;Time box and move on&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Ask &lt;strong&gt;very specific questions&lt;/strong&gt; to Microsoft. &lt;em&gt;“What’s the future of Copilot?”&lt;/em&gt; will get a vague response. They won’t commit to any future plans. But they’ll gladly clarify details of new features.&lt;/li&gt;
  &lt;li&gt;8 hours of research is &lt;strong&gt;draining&lt;/strong&gt;. Remember to take breaks and keep things light.&lt;/li&gt;
  &lt;li&gt;Even a seemingly &lt;strong&gt;small release can easily occupy 6 people&lt;/strong&gt; for a day.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;I know &lt;em&gt;“losing”&lt;/em&gt; 6 people for a day might be a big ask for some partners, but I believe it’s totally worth it. The tasks regarding &lt;em&gt;tenant administration&lt;/em&gt;, or &lt;em&gt;virtual tables&lt;/em&gt; will feel far &lt;strong&gt;less daunting&lt;/strong&gt;, as we now have people who can support us on these &lt;strong&gt;non-traditional work items&lt;/strong&gt;. Also, I can’t speak for the rest of the team, but I found diving into topics &lt;em&gt;“beyond”&lt;/em&gt; BC quite exciting!&lt;/p&gt;

</description>
        <pubDate>Mon, 15 Apr 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/release-wave-blueprint/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/release-wave-blueprint/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>AppSource Transactability - The AL side of the story</title>
        <description>&lt;p&gt;I spent the last few weeks taking another look at the &lt;strong&gt;AppSource transactability&lt;/strong&gt; we got a wave or two ago. The idea is quite neat, we’re not &lt;em&gt;monetization specialists&lt;/em&gt;, we add value by &lt;strong&gt;enhancing the product&lt;/strong&gt;, so why should we bother with a monetization engine, let Microsoft do that for us. &lt;em&gt;Sure, it sounds good&lt;/em&gt;, but the experience was less smooth than I’d like it to be. So here’s a rundown of what you should know before you start your &lt;strong&gt;transition to AppSource transactability&lt;/strong&gt; from a technical perspective.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;a-quick-recap&quot;&gt;A quick recap&lt;/h3&gt;

&lt;p&gt;We’re used to using &lt;strong&gt;license&lt;/strong&gt; (&lt;em&gt;.flf/.bclicense&lt;/em&gt;) files &lt;strong&gt;OnPrem&lt;/strong&gt; to ensure only licensed users can access our range of objects, so even if a user has &lt;strong&gt;SUPER&lt;/strong&gt; permissions, they &lt;strong&gt;won’t be able to access an object&lt;/strong&gt; that’s not in their license.&lt;/p&gt;

&lt;p&gt;But the &lt;strong&gt;Cloud&lt;/strong&gt; doesn’t use license files anymore. That means if a customer installs your app, they have &lt;strong&gt;access to all objects&lt;/strong&gt;, and mind you, even if you have your offer set to »Contact Partner« in AppSource, your app can still be installed on any tenant if you &lt;strong&gt;know the App ID.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Generally, I’ve seen partners take two approaches to solve this. Most of them went with &lt;em&gt;»You can’t really set up and use our apps without our consultants, so go ahead«&lt;/em&gt;, partially because adding some sort of &lt;strong&gt;licensing is overhead&lt;/strong&gt;. The other option was that partners implemented their &lt;strong&gt;own monetization or licensing logic&lt;/strong&gt; that prevented you from using the functionality if you hadn’t bought their license.&lt;/p&gt;

&lt;p&gt;But with AppSource transactability, the overhead is now &lt;strong&gt;taken care by Microsoft&lt;/strong&gt;. Keep in mind that currently &lt;strong&gt;only a per-user plan is supported&lt;/strong&gt;. Each user that wants to have access to your app needs to have a license purchased. If you’re using different pricing models, like &lt;em&gt;per app, per company, per number of invoices, …&lt;/em&gt; you’re currently out of luck. Microsoft says they’ll &lt;em&gt;work on &lt;strong&gt;adding different models&lt;/strong&gt; depending on what the community needs&lt;/em&gt;, but who knows when that will be.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;everything-works-through-entitlements&quot;&gt;Everything works through entitlements&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud&lt;/strong&gt; doesn’t use license files, it &lt;strong&gt;uses entitlements&lt;/strong&gt;, but the logic is still the same. If you don’t have access to an object through entitlements, it &lt;strong&gt;doesn’t matter if you have SUPER permissions&lt;/strong&gt;. This picture illustrates it well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-vs-permission.png&quot; alt=&quot;Entitlements vs. Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Without the necessary entitlement&lt;/strong&gt;, the user won’t see the pages of your app and &lt;strong&gt;won’t have permission&lt;/strong&gt; to manipulate the data. So let’s start with the entitlement object. The base and system apps define several different entitlements. But for us, we should pay attention to the following 4 types:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;PerOfferUserPlan&lt;/li&gt;
  &lt;li&gt;Role - Delegated&lt;/li&gt;
  &lt;li&gt;ApplicationScope – API.ReadWrite.All&lt;/li&gt;
  &lt;li&gt;Unlicensed&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;perofferuserplan&quot;&gt;PerOfferUserPlan&lt;/h3&gt;

&lt;p&gt;This is the main entitlement type for monetization, it &lt;strong&gt;maps to the license&lt;/strong&gt; users will buy through AppSource.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-gold.png&quot; alt=&quot;Gold Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Id&lt;/strong&gt; in this case is the &lt;strong&gt;ServiceId&lt;/strong&gt; of the offer plan you create when creating the AppSource &lt;strong&gt;submission&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/offer-plan-service-id.png&quot; alt=&quot;Entitlements vs. Permissions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ObjectEntitlements&lt;/strong&gt; is where you &lt;strong&gt;map a permission set to an entitlement&lt;/strong&gt;. This is how an entitlement defines the &lt;strong&gt;maximum permissions&lt;/strong&gt; that can be assigned to a user holding this entitlement.&lt;/p&gt;

&lt;p&gt;You can have &lt;strong&gt;multiple PerUserOfferPlans&lt;/strong&gt; if you want to implement different license levels (&lt;em&gt;bronze, silver, gold&lt;/em&gt;). Each of the lower plans would have a more restrictive permissions set attached to an entitlement, and that’s how you’d &lt;strong&gt;control the level of access&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;delegated-admin-entitlements&quot;&gt;Delegated Admin entitlements&lt;/h3&gt;

&lt;p&gt;You &lt;strong&gt;don’t have to implement these&lt;/strong&gt; entitlements, but without them, the &lt;strong&gt;delegated admin users won’t have access&lt;/strong&gt; to your application objects and won’t be able to troubleshoot customers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-admin.png&quot; alt=&quot;Delegated Admin Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are &lt;strong&gt;4 different delegated admin roles&lt;/strong&gt; currently available for BC:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Delegated Admin Agent - &lt;em&gt;00000000-0000-0000-0000-000000000007&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Delegated Helpdesk Agent - &lt;em&gt;00000000-0000-0000-0000-000000000008&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Dynamics 365 Agent - &lt;em&gt;00000000-0000-0000-0000-000000000009&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Delegated BC Admin Agent - &lt;em&gt;00000000-0000-0000-0000-000000000010&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;IDs have to be exactly as specified above&lt;/strong&gt;, which relate to the actual role in Entra ID. My preference is to give all delegated roles full permissions, so they can access and troubleshoot any part of the application. You can however make it more restrictive by assigning a different permission set.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;applicationscope--apireadwriteall&quot;&gt;ApplicationScope – API.ReadWrite.All&lt;/h3&gt;

&lt;p&gt;This is the entitlement that gets assigned to the &lt;strong&gt;S2S API sessions with the API.ReadWrite.All Scope&lt;/strong&gt;. If an external application is integrating with Business Central using user impersonation/delegation authentication, the entitlements/permissions of the &lt;strong&gt;impersonated users apply&lt;/strong&gt;. Nothing special there. However, if the client is using &lt;strong&gt;Service-2-Service (S2S) authentication&lt;/strong&gt;, The following entitlement is assigned to it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-api.png&quot; alt=&quot;API Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;permissions for the S2S applications&lt;/strong&gt; are managed on the &lt;strong&gt;Microsoft Entra Applications&lt;/strong&gt; page, but they follow the same rules as users. If the client &lt;strong&gt;doesn’t have entitlements&lt;/strong&gt; for an object, it doesn’t matter if it has SUPER permissions, the &lt;strong&gt;access is not granted&lt;/strong&gt;. So if your app is exposing any APIs and you want to support S2S, you should include this entitlement object and give it sufficient access, otherwise, a simple Ping API starts throwing permission errors:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/ping-api.png&quot; alt=&quot;Ping API&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-api-error.png&quot; alt=&quot;API Entitlement Error&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;unlicensed-entitlement&quot;&gt;Unlicensed Entitlement&lt;/h3&gt;

&lt;p&gt;This is the entitlement object that gets &lt;strong&gt;assigned if no others match&lt;/strong&gt;, meaning if the user doesn’t have a PerUserOfferPlan license, is not a delegated admin (or delegated admin entitlements are not defined), or is an S2S authenticated client and ApplicationScope entitlement isn’t defined.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-unlicensed.png&quot; alt=&quot;Unlicensed Entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This one is primarily used for &lt;strong&gt;side-by-side&lt;/strong&gt; functionality, meaning, when you &lt;strong&gt;already have your monetization solution&lt;/strong&gt;, and you want to &lt;strong&gt;move to AppSource monetization&lt;/strong&gt; without causing any issues for your existing customers.&lt;/p&gt;

&lt;p&gt;As soon as you &lt;strong&gt;define a single entitlement object&lt;/strong&gt; in your code base and publish that version to AppSource, the &lt;strong&gt;entitlement check starts being enforced&lt;/strong&gt;. So if you define a PerUserOfferPlan and release a new version, &lt;strong&gt;all existing customers&lt;/strong&gt; that update the app &lt;strong&gt;won’t be able to use your app&lt;/strong&gt; anymore until they buy appropriate licenses through AppSource. This can be annoying, especially if they’ve already purchased a license through your own monetization model. Hence we implement a &lt;strong&gt;side-by-side solution&lt;/strong&gt;, that will &lt;strong&gt;allow customers to use the app normally while they’re transitioning&lt;/strong&gt; to the MS monetization model. More on the side-by-side in the next section.&lt;/p&gt;

&lt;p&gt;If you have existing customers, the unlicensed entitlement should give all the access that the existing customers need (usually all available permissions). If you’re &lt;strong&gt;creating a new app&lt;/strong&gt; without any existing customers, you can &lt;strong&gt;skip the unlicensed entitlement&lt;/strong&gt; altogether.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;side-by-side&quot;&gt;Side-by-Side&lt;/h3&gt;

&lt;p&gt;If you went down the route of creating your own monetization engine, you probably found &lt;strong&gt;key areas&lt;/strong&gt; of your functionality and implemented a &lt;strong&gt;license check&lt;/strong&gt; in those points. I common approach is to subscribe to the OnBeforeInsertEvent of a key table and check if the app is licensed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/license-check.png&quot; alt=&quot;Check for license on Insert of a Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If this was your approach, you now have to &lt;strong&gt;wrap these checkers in IsUnlicensed checks&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/license-check-isunlicensed.png&quot; alt=&quot;Check for license on Insert of a Table with IsUnlicensed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If a user has &lt;strong&gt;purchased a license through AppSource&lt;/strong&gt;, they will have the corresponding &lt;strong&gt;entitlement assigned&lt;/strong&gt; and the code will &lt;strong&gt;skip the license check&lt;/strong&gt;. If they haven’t, they get the &lt;strong&gt;Unlicensed entitlement&lt;/strong&gt; assigned and the code will &lt;strong&gt;check with your monetization engine&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;IsUnlicensed will return true if a user has &lt;strong&gt;any other entitlement from the current app assigned&lt;/strong&gt;. If you’re planning to implement &lt;strong&gt;multiple access levels&lt;/strong&gt; like &lt;em&gt;Gold, Silver, or Bronze&lt;/em&gt;, you might sometimes want to direct your code flow in a direction only if the user has the appropriate entitlement level assigned. You can do that using the &lt;strong&gt;IsEntitled&lt;/strong&gt; function. The name of the entitlement to check is the &lt;strong&gt;entitlement object name&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-check.png&quot; alt=&quot;Check for a specific entitlement&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The important thing to note here is that &lt;strong&gt;entitlements are completely ignored OnPrem&lt;/strong&gt; and &lt;strong&gt;IsUnlicensed or IsEntitled will always return false&lt;/strong&gt;. So if you have any &lt;strong&gt;automated tests&lt;/strong&gt; ensuring your monetization approach works, those &lt;strong&gt;won’t work&lt;/strong&gt;. I’ve asked Microsoft what to do in this case, and they’re &lt;em&gt;discussing it&lt;/em&gt;. Until they come up with an approach, it’s best to wrap the IsUnlicensed in an interface so that we can &lt;strong&gt;mock it in tests&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;cross-app-entitlement-check&quot;&gt;Cross-app entitlement check&lt;/h3&gt;

&lt;p&gt;The final aspect of entitlements that we’ll take a look at is &lt;strong&gt;checking for entitlements of a different app&lt;/strong&gt;. A scenario when you’d want this is if, for example, you’re offering three apps, &lt;strong&gt;App A, App B, and App C&lt;/strong&gt;. They’re all standalone apps that work independently, however you want to give the users of App A the other two apps for free. If App B and C are &lt;strong&gt;only checking for their own entitlements&lt;/strong&gt;, a user would need to &lt;strong&gt;purchase three licenses&lt;/strong&gt;. However, if we implement a &lt;strong&gt;cross-app check&lt;/strong&gt;, we can ensure that users with licenses for App A, also have access to the other two apps.
So if we refactor the above example&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-check-manager.png&quot; alt=&quot;Check for a specific entitlement with an Entitlement Manager&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s say this DownloadEntries procedure is in App C. This is how the entitlement manager would look like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/entitlements/entitlement-manager.png&quot; alt=&quot;Check for entitlements across apps&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We check for either a Gold entitlement &lt;strong&gt;in App C&lt;/strong&gt;, or a Gold entitlement &lt;strong&gt;in App A&lt;/strong&gt; and either entitlement is enough for the check to pass. The next logical step here would now be to &lt;strong&gt;move the entitlement manager to a separate app&lt;/strong&gt;, so we can manage all these app relationship combinations in a &lt;strong&gt;central place&lt;/strong&gt;. But this was a quick example of how we can check if a user has an entitlement for a different app. The same applies to the IsUnlicensed function, it too can take a GUID parameter and we can check if a user has the Unlicensed entitlement for a different app.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, this brings us to the end. I know this was quite a read, but as I was researching the topic of entitlements there were just &lt;strong&gt;so many pieces missing&lt;/strong&gt; in the official documentation. I tried opening issues for it, I tried creating PRs to adjust the information, but there was no response from maintainers, so I decided to package all this information in a blog post. Partially for myself, for the next time, I have to deal with entitlements, but also for anyone else going down the same route.&lt;/p&gt;
</description>
        <pubDate>Mon, 08 Apr 2024 11:00:00 +0300</pubDate>
        <link>https://tine.staric.net/blog/2024/transactability-entitlements/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/transactability-entitlements/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Curious case of Insert Lock Timeouts</title>
        <description>&lt;p&gt;I’ve been a BC dev for a while now. It’s been a learning experience through and through. But there was always an area that I kept pushing away. &lt;strong&gt;SQL&lt;/strong&gt;. I don’t really know why, I never had issues with it, so I guess in my mind I just pushed it away as unimportant. It sat in some distant pile with &lt;em&gt;permissions, tooltips, and translations&lt;/em&gt; — &lt;strong&gt;&lt;em&gt;my afterthought pile.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This meant I never really understood &lt;strong&gt;indexes, database locks, or SIFTs&lt;/strong&gt;. And I didn’t need to. There are &lt;strong&gt;no locking issues&lt;/strong&gt; when you’re testing with &lt;strong&gt;just one user&lt;/strong&gt;. Well fast forward a few years, and that all had to change.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For the better part of last year, I was working on a project where we were trying to analyze the &lt;strong&gt;performance of a huge monolithic app&lt;/strong&gt; (3k+ objects). There were many sides we tried attacking the problem from, AL Profiler, Telemetry, BCPT,… Ultimately, we decided that our first focus should be on &lt;strong&gt;removing locks&lt;/strong&gt; as the app is planned to be used by &lt;strong&gt;100+ concurrent users&lt;/strong&gt; and a ton of background services.&lt;/p&gt;

&lt;p&gt;We set up &lt;strong&gt;BCPT tests&lt;/strong&gt;, start running them, and find our first batch of &lt;strong&gt;deadlocks&lt;/strong&gt; and &lt;strong&gt;lock timeouts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Time to figure out how locks work.&lt;/em&gt; I knew we got &lt;strong&gt;ReadIsolation&lt;/strong&gt; a while ago that supposedly helps with locks. I came across a couple of brilliant blog posts by &lt;a href=&quot;https://www.linkedin.com/in/alexander-drogin-0635422b/&quot;&gt;Alexander Drogin&lt;/a&gt;. They helped me understand what locks are and how read isolation changes them. That’s &lt;strong&gt;not what I’m going to focus on here&lt;/strong&gt;, but if you’re interested in that, here are the links: &lt;a href=&quot;https://www.keytogoodcode.com/post/transaction-isolation-in-business-central&quot;&gt;Transaction Isolation in Business Central&lt;/a&gt;, &lt;a href=&quot;https://www.keytogoodcode.com/post/readcommitted-isolation-in-azure-sql&quot;&gt;ReadCommitted Isolation in Azure SQL&lt;/a&gt;, &lt;a href=&quot;https://www.keytogoodcode.com/post/read-committed-snapshot-isolation-and-the-write-skew-anomaly&quot;&gt;ReadCommittedSnapshotIsolation and the Write Skew Anomaly&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some changes to &lt;em&gt;read isolation&lt;/em&gt;, some &lt;em&gt;missing filters added&lt;/em&gt; and some &lt;em&gt;write transactions started later in the process&lt;/em&gt;, and we made our first progress. No locks on 100 concurrent users! Okay, add another scenario, rinse, and repeat.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Everything seemed fine for a while until we added 5 or 6 scenarios to run concurrently. Then something extremely weird started happening. We got &lt;strong&gt;lock timeouts&lt;/strong&gt;, but not on reads but &lt;strong&gt;on writes&lt;/strong&gt;. That broke my mind. &lt;strong&gt;How am I blocked from inserting a record?&lt;/strong&gt; I’d get modify, but insert? How can a different transaction meddle with inserts?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/error-list.png&quot; alt=&quot;List of lock timeout errors&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“We can’t save your changes right now, because a record in table ‘Simple Entry’ is being updated in a transaction done by another session. You’ll have to wait until the other transaction has completed, which may take a while. Please try again later.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is where the call stack breaks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/callstack-break.png&quot; alt=&quot;Call Stack Break Point&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now you’re probably thinking &lt;em&gt;“Ha! You must have some weird logic on OnInsert trigger or a subscriber!”&lt;/em&gt;. Yeah, I thought that too. I removed &lt;strong&gt;all trigger, all subscribers, all global database subscribers&lt;/strong&gt;, and nothing, still the same issue…&lt;/p&gt;

&lt;p&gt;The answer was staring me &lt;em&gt;right in the face&lt;/em&gt;. Here’s how the &lt;strong&gt;locks look after an insert&lt;/strong&gt; to my SimpleEntry table.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/active-locks.png&quot; alt=&quot;Active Locks After Insert&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Due to my lack of knowledge of &lt;strong&gt;what is SIFT&lt;/strong&gt; and how it works, my mind dismissed it as &lt;em&gt;“huh, that’s odd, anyway, moving on.”&lt;/em&gt;. But seeing the locks enough times, I decided maybe it finally is time to properly learn about SIFT.&lt;/p&gt;

&lt;p&gt;If you’re comfortable with understanding SIFT, feel free to skip to the section about SIFT Locks where we continue the lock story. For everyone else, let’s take a detour, and understand &lt;strong&gt;what SIFTs are&lt;/strong&gt; first.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;sift-in-a-nutshell&quot;&gt;SIFT in a nutshell&lt;/h3&gt;

&lt;p&gt;SIFT stands for &lt;strong&gt;SumIndexField Technology&lt;/strong&gt;. The &lt;a href=&quot;https://learn.microsoft.com/en-us/dynamics365/business-central/dev-itpro/developer/devenv-sift-technology&quot;&gt;documentation&lt;/a&gt; could honestly do a better job of explaining the concept. Here’s how it works:&lt;/p&gt;

&lt;p&gt;Imagine we have a simple table, like our &lt;strong&gt;SimpleEntry&lt;/strong&gt; table. Nothing special, a primary key, a couple of fields, that’s it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/simple-entry-table.png&quot; alt=&quot;Simple Entry Table&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And say we have some data in there:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/simple-entry-data.png&quot; alt=&quot;Simple Entry Data&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s say we want to figure out the total amount of sales entries. We’d do something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/sum-sales-org.png&quot; alt=&quot;Sum Sales Procedure&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Or also common, something like this&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/flowfield.png&quot; alt=&quot;Sales Amount FlowField&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In both cases, the SQL server goes through all lines of type sales and starts calculating &lt;em&gt;125 + 642 + … = &lt;strong&gt;1491!&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But if you define &lt;strong&gt;SumIndexFields&lt;/strong&gt; on a particular key like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/sift-on-key.png&quot; alt=&quot;SIFT on Key&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The SQL server will start maintaining something called an &lt;strong&gt;Indexed View&lt;/strong&gt;. You can think of it as another table, where sums for this key are stored. For our example, it would look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view.png&quot; alt=&quot;Indexed View Data&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every time an &lt;strong&gt;entry is added or modified in the SimpleEntry table, the sum in this &lt;em&gt;“table”&lt;/em&gt; is updated as well&lt;/strong&gt;. This means that the next time you ask for a &lt;strong&gt;total amount of Sale type&lt;/strong&gt; entries, the SQL server can just go &lt;strong&gt;&lt;em&gt;“1491!”&lt;/em&gt;&lt;/strong&gt; without looping through each record.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;turns-out-sift-is-the-culprit&quot;&gt;Turns out SIFT is the culprit!&lt;/h3&gt;
&lt;p&gt;We mentioned that if &lt;strong&gt;SQL maintains an indexed view&lt;/strong&gt;, it has to &lt;strong&gt;update that view for each change in the underlying table&lt;/strong&gt;. That means, that if I &lt;strong&gt;insert a new record&lt;/strong&gt; into my SimpleEntry table, &lt;strong&gt;two rows become locked&lt;/strong&gt;; the newly created entry record, and the row in the indexed view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view-lock.png&quot; alt=&quot;Indexed View Locks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And the lock is held for the &lt;strong&gt;duration of the transaction&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If a &lt;strong&gt;separate transaction&lt;/strong&gt; tries to &lt;strong&gt;add a record of type Sale&lt;/strong&gt; to the entry table, that in itself shouldn’t be a problem for the SimpleEntry table. However, as that insert needs to also update the Indexed View, it will have to &lt;strong&gt;wait until the first transaction releases the lock on it&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;A record of type &lt;strong&gt;Purchase&lt;/strong&gt; however will have &lt;strong&gt;no issues&lt;/strong&gt;, as it doesn’t need the Sale row in the indexed view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/indexed-view-purchase.png&quot; alt=&quot;Indexed View Purchase&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When these transactions pile up, as they do when you have &lt;strong&gt;100 concurrent users&lt;/strong&gt;, you quickly reach the &lt;strong&gt;10-second limit&lt;/strong&gt; at which point the waiting transaction &lt;strong&gt;times out&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And that’s not the only side that can cause issues. Remember, anytime we &lt;strong&gt;lock the related row&lt;/strong&gt; in the indexed view, we &lt;strong&gt;can’t insert a record&lt;/strong&gt; in the entry table with a matching index value. The two examples above that make use of indexed views, the &lt;em&gt;SumSales&lt;/em&gt; procedure and the &lt;em&gt;SalesAmount&lt;/em&gt; flow field, are both &lt;strong&gt;reading the indexed view&lt;/strong&gt;. So if they read it with &lt;strong&gt;UpdLock&lt;/strong&gt;, which is the default locking type, after you start a write transaction, you’re going to &lt;strong&gt;have a problem&lt;/strong&gt;. That is until &lt;strong&gt;tri-state locking&lt;/strong&gt; becomes the default. You can read what &lt;a href=&quot;https://www.linkedin.com/in/duilio-tacconi-4042999a&quot;&gt;Duilio Tacconi&lt;/a&gt; wrote &lt;a href=&quot;https://duiliotacconi.com/2023/11/23/461/&quot;&gt;about it&lt;/a&gt; if you’d like to know more.&lt;/p&gt;

&lt;p&gt;But until we have tri-state locking, both of these examples will effectively &lt;strong&gt;lock the row in our indexed view&lt;/strong&gt;, and while the locks are held, &lt;strong&gt;inserts will have to wait&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/update-and-lock-sum-sales.png&quot; alt=&quot;Update and Lock - Sum Sales&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/insertlocks/update-and-lock-flowfield.png&quot; alt=&quot;Update and Lock - FlowField&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yes, &lt;strong&gt;flow fields also lock rows&lt;/strong&gt;. They lock them with the &lt;strong&gt;same lock type as the parent table&lt;/strong&gt;. So in the above example, if I’d set the IsolationLevel on the Customer to ReadUncommited, then the flow field would apply this hint as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;so-what-should-we-do-about-it&quot;&gt;So what should we do about it?&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Should we stop using SIFT?&lt;/em&gt; &lt;strong&gt;No!&lt;/strong&gt; Well, maybe. Sometimes. It depends. There are a couple of different approaches we took to resolve our insert lockouts.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Lower read isolation&lt;/strong&gt; on reads that were reading the indexed view with &lt;strong&gt;UpdLock&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Keep the table as is, change the logic of the process so it &lt;strong&gt;inserts in the TempTable&lt;/strong&gt; first, and only inserts in the actual table at the very end, &lt;strong&gt;holding locks for a minimal time&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Run the processes &lt;strong&gt;asynchronously&lt;/strong&gt; through a job queue entry&lt;/li&gt;
  &lt;li&gt;Switch user inserts to a staging table that’s &lt;strong&gt;optimized for inserting&lt;/strong&gt; and have a job transfer data to &lt;strong&gt;read optimized tables&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Remove SumIndexFields&lt;/strong&gt; and accept the read performance penalty&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There’s another one, that we haven’t tried. Just the other day, I was watching &lt;a href=&quot;https://www.linkedin.com/in/ericwauters&quot;&gt;Waldo’s&lt;/a&gt; &lt;a href=&quot;https://youtu.be/E3ADZsisFbE?si=mPtH-c2A8hO0sYhA&amp;amp;t=1003&quot;&gt;Coding 4 Performance&lt;/a&gt; session from &lt;a href=&quot;https://www.bctechdays.com/event&quot;&gt;BC Tech Days&lt;/a&gt; where he mentions &lt;strong&gt;IncludedFields&lt;/strong&gt; as an alternative to SIFT. That’s another option to look into.&lt;/p&gt;

&lt;p&gt;As you see, it’s not a simple answer, there are different options, all coming with their own &lt;strong&gt;set of tradeoffs&lt;/strong&gt;, but at least I hope the next time you experience issues with &lt;strong&gt;locks on inserts&lt;/strong&gt;, you’ll know where to look.&lt;/p&gt;

</description>
        <pubDate>Fri, 08 Mar 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/insert-lock-timeouts/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/insert-lock-timeouts/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>Reference Parameters - var does matter</title>
        <description>&lt;p&gt;I previously posted about &lt;a href=&quot;https://tine.staric.net/blog/2024/3-pitfalls-of-var-parameters/&quot;&gt;Pitfalls of var parameters&lt;/a&gt; and how things can go sideways if we’re not careful when using them.&lt;/p&gt;

&lt;p&gt;What I wrote there in regards to marking &lt;em&gt;reference&lt;/em&gt; parameters with var was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Var modifiers don’t make a difference, but you should still use them to signal the intentionality of your procedure. If the procedure intends to modify the parameter, add a var in front of it, if it’s only reading data, skip it.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, what I wrote there still holds, regardless of using var with a reference data type parameter we’re able to make changes to it and those changes are reflected outside our local procedure. But thanks to &lt;a href=&quot;https://www.linkedin.com/in/ajkauffmann&quot;&gt;Arend-Jan Kauffmann&lt;/a&gt; for pointing out, that that &lt;strong&gt;wasn’t the full truth&lt;/strong&gt;. Marking a reference parameter with a var or not &lt;strong&gt;actually does play a role&lt;/strong&gt;, and this post is about clarifying how and why it’s important we think about it in our &lt;strong&gt;event-driven world of extensions&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;tldr&quot;&gt;tl/dr&lt;/h3&gt;
&lt;p&gt;When we’re passing a reference type parameter to a procedure &lt;strong&gt;without var&lt;/strong&gt;, we’re passing the &lt;strong&gt;reference&lt;/strong&gt; by value. The procedure can make all the changes to the instance it points to, however, it &lt;strong&gt;cannot change the reference so it would point to a different instance&lt;/strong&gt;. When passing the parameter &lt;strong&gt;with var&lt;/strong&gt;, we can &lt;strong&gt;also change the reference&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Okay, now that that’s out of the way, let’s go through this again, but with an example or two, to make this a bit easier to understand.
Let’s take the same List example as last time. We know that &lt;strong&gt;both of these result in the same outcome&lt;/strong&gt;. In both cases, &lt;strong&gt;var or no var&lt;/strong&gt;, we end up with a list with &lt;strong&gt;2 items&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-add-no-var.png&quot; alt=&quot;Add to List - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-add-var.png&quot; alt=&quot;Add to List - var&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Let’s make these examples weirder, so we can see where &lt;strong&gt;var&lt;/strong&gt; starts making a difference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-change-reference-no-var.png&quot; alt=&quot;Change List Reference - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What do you think the count is going to be here? &lt;em&gt;1? 2? 3?&lt;/em&gt; Well, let’s see…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-change-reference-no-var-count.png&quot; alt=&quot;Change List Reference - Count - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s one.&lt;/strong&gt; Before we explain again what’s happening, let’s take a look at the same example if the list parameter is marked with var:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-change-reference-var.png&quot; alt=&quot;Change List Reference - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/refparameters/ref-param-list-change-reference-var-count.png&quot; alt=&quot;Change List Reference - Count - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This time the result is more along the lines of what we’d expect. &lt;em&gt;So why this difference in behavior?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;When passing a reference type, something like a list, we’re &lt;strong&gt;not passing an actual list&lt;/strong&gt;, but only a &lt;strong&gt;reference to that list&lt;/strong&gt;. &lt;em&gt;A pointer, a location.&lt;/em&gt; Similar to having a piece of paper where the address of a house is written on. When passing it to a procedure, you’re not passing the whole house, just this &lt;em&gt;piece of paper&lt;/em&gt; with the address. So when we’re talking about passing it by reference (with var) or by value (without var), we’re talking about passing the &lt;strong&gt;reference&lt;/strong&gt; by value or by reference. In our case, this piece of paper with the address. In both cases, someone can go to the house and &lt;strong&gt;put something in&lt;/strong&gt; the house, or &lt;strong&gt;take something out&lt;/strong&gt; of it. However, if we give them the address by value (without var), we’re saying, &lt;em&gt;you can find the house here, do what you want in the house, but you &lt;strong&gt;can’t change the address&lt;/strong&gt; on this paper.&lt;/em&gt; When we pass it by reference (with var), they can also &lt;strong&gt;change the address&lt;/strong&gt; so it points to a &lt;strong&gt;different house altogether&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And that’s what’s happening in our list example above. We got the &lt;em&gt;address&lt;/em&gt; to our List (MyList), but then we created a &lt;strong&gt;completely new list&lt;/strong&gt; (MyList2) and tried saying, &lt;em&gt;“Hey, MyList address should now point to this new list”&lt;/em&gt;. When the parameter is passed without var, we &lt;strong&gt;cannot do that&lt;/strong&gt;, hence, when the procedure finishes, MyList still &lt;strong&gt;points to the original List&lt;/strong&gt; with only 1 item (“Hello”).&lt;/p&gt;

&lt;p&gt;In the second example, because MyList is &lt;strong&gt;passed with var&lt;/strong&gt;, we can change it, so that it &lt;strong&gt;points to the new List&lt;/strong&gt;, MyList2.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;“Okay Tine, fine, I get it, but so what? I mean, who in their right mind goes and creates a new list, if they get one passed in as a parameter…”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Yeah, fair point. But keep in mind, that any procedure that &lt;strong&gt;returns a list&lt;/strong&gt; actually &lt;strong&gt;creates a new instance&lt;/strong&gt;. So it’s not that uncommon.&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-invoice-change-reference-no-var.png&quot; alt=&quot;Assign Invoices - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The above example &lt;strong&gt;won’t work&lt;/strong&gt;, but it will if the parameter is marked with var:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-invoice-change-reference-var.png&quot; alt=&quot;Assign Invoices - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;so will this:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-invoice-add.png&quot; alt=&quot;Assign Invoices - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Fine, be mindful of how you assign to lists. Why don’t I just &lt;strong&gt;always mark reference parameters with var&lt;/strong&gt;? One less thing to worry about…”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bad idea.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Especially when you work with events. Let me give you an example with a reference type that will make it more obvious:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-interface-main.png&quot; alt=&quot;Interface - Main&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have a simple procedure that sets a value, exposes the interface through an event, and then gets the value. Let’s take a look at the interface implementation:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-interface-normal.png&quot; alt=&quot;Interface Implementation - Normal&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Simple, right?&lt;/em&gt; One procedure sets the value, and the other reads it. So let’s turn our attention to the event over there. If we expose the interface &lt;strong&gt;by value&lt;/strong&gt;, subscribers can &lt;strong&gt;only access the procedures of that interface&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-interface-event-no-var.png&quot; alt=&quot;Interface Event - No var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the other hand, if you expose it &lt;strong&gt;by reference&lt;/strong&gt;, a subscriber can also &lt;strong&gt;change the implementation&lt;/strong&gt; that the interface is referencing:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-interface-event-var.png&quot; alt=&quot;Interface Event - var&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that can lead to &lt;strong&gt;unpredictable behavior&lt;/strong&gt; for your app, especially if the new implementation does something stupid like:&lt;/p&gt;

&lt;p&gt; &lt;img src=&quot;/images/refparameters/ref-param-interface-wild.png&quot; alt=&quot;Interface Implementation - Wild&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But hey, maybe that’s exactly &lt;strong&gt;what you wanted&lt;/strong&gt;. The option for subscribers to &lt;strong&gt;change the implementation&lt;/strong&gt; interface points to. So there’s no &lt;em&gt;always right&lt;/em&gt; or &lt;em&gt;always wrong&lt;/em&gt; answer here.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Now, in summary, &lt;em&gt;should you use var with reference parameters? or should you not?&lt;/em&gt; It comes down to the usual &lt;strong&gt;“It depends”&lt;/strong&gt;. What I’m hoping to achieve with this blog is for us to &lt;strong&gt;be mindful that there is a difference&lt;/strong&gt; and you should think about &lt;em&gt;“Do I want the procedure to only modify the instance of a variable, or should I let it change the reference to a completely different instance?”&lt;/em&gt; and that we don’t just &lt;strong&gt;blindly mark or not mark parameters with var&lt;/strong&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 26 Feb 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/reference-parameters-var-does-matter/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/reference-parameters-var-does-matter/</guid>
        
        
        <category>al</category>
        
      </item>
    
      <item>
        <title>My MB-820 Experience and why you shouldn&apos;t worry (that much)</title>
        <description>&lt;p&gt;Last Friday I took the &lt;strong&gt;MB-820&lt;/strong&gt;. I wanted to do it as soon as possible. I guess I wanted to prove to myself that the years spent working as a developer were enough preparation to pass this certification.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Did I pass? I don’t know.&lt;/em&gt; More on that later.&lt;/p&gt;

&lt;p&gt;But as I was sharing my experience with my colleagues who are planning to take it as well, I realized a lot of worries come from &lt;strong&gt;not knowing how the exam process works&lt;/strong&gt;. The point of this post is not to leak questions, I don’t think there’s a point in memorizing questions. It’s more about explaining the process, how you take the exam, what can you expect, and what style of questions can you expect.&lt;/p&gt;

&lt;p&gt;If you’ve taken any other MS exam, you’ll already know most of these things. But I believe for a lot of BC Developers, this will be the first certification they’ll attempt.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;remember&quot;&gt;Remember!&lt;/h3&gt;
&lt;p&gt;I’ll repeat this at the end, but my takeaway is, that an experienced developer, that worked on a wider set of projects &lt;strong&gt;should be able to pass this exam with a few days of preparation&lt;/strong&gt;. So go over some areas you’re uncertain about, and most importantly, &lt;strong&gt;trust yourself&lt;/strong&gt;. You’ve done most of the things they’re asking you about, now you just have to &lt;strong&gt;show it to them&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exam-environment&quot;&gt;Exam Environment&lt;/h3&gt;

&lt;p&gt;You’ll take the exam through Pearson VUE. You can either take it &lt;strong&gt;in-person&lt;/strong&gt; or &lt;strong&gt;online&lt;/strong&gt;. I tried both. I took the MB-800 in person, and MB-820 online. The experience is more or less the same. The in-person option did make me less worried about anything going wrong during the exam, but Online allows much more flexibility around when you can take the exam.&lt;/p&gt;

&lt;p&gt;To take the exam online, you’ll download an app from their site and you’ll have to ensure that the room you’re in has no distracting factors (monitors and TVs need to be off, no books, anything that could be considered “cheating”). You’ll have to take pictures of the front, back, and sides of your exam area. Don’t worry, &lt;strong&gt;the app guides you through everything&lt;/strong&gt;. Additionally, your PC shouldn’t be running any additional apps. You can read more about it &lt;a href=&quot;https://learn.microsoft.com/en-us/credentials/certifications/online-exams&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;exam-style&quot;&gt;Exam Style&lt;/h3&gt;
&lt;p&gt;When you start the exam, you’ll have all the exam rules written out, take your time to read them, this doesn’t take away from your exam time yet. Once the actual exam starts, you’ll have &lt;strong&gt;2 hours to finish it&lt;/strong&gt;. My take was, that 2 hours is &lt;strong&gt;enough time&lt;/strong&gt;, to comfortably go through all questions and return to the ones I found iffy.&lt;/p&gt;

&lt;p&gt;The exam has &lt;strong&gt;3 sections of questions&lt;/strong&gt;. Within each section, you can always move back and forth between questions. So if you’re unsure about some, you can move forward to the next one, and return to it later. However, &lt;strong&gt;once you leave a section, you will not be able to return to it anymore&lt;/strong&gt;. The app lets you know of that, so don’t worry about accidentally leaving a section.&lt;/p&gt;

&lt;p&gt;In my case, the sections were split into 8/6/42 questions, but this might change, the exam is in Beta after all. The first two sections were more scenario-based. &lt;em&gt;“The customer calls in with this and that problem, what do you do?”&lt;/em&gt;. The last section was more “to the point”, you have a snippet of code, what you have to change, or what property you use for this and that purpose.&lt;/p&gt;

&lt;p&gt;Now you might think &lt;em&gt;“Ugh, are we really going to get questions that we could easily google?!”&lt;/em&gt;. Yes, yes we will.&lt;/p&gt;

&lt;p&gt;However, a hugely important detail that you have to keep in mind is, that since August last year, &lt;strong&gt;you can use MS Learn during all “role-based” exams!&lt;/strong&gt; You can read about it &lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-learn-blog/introducing-a-new-resource-for-all-role-based-microsoft/ba-p/3500870&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;you-can-use-ms-learn-during-the-exam&quot;&gt;You can use MS Learn during the exam!&lt;/h3&gt;
&lt;p&gt;How that works during the exam is, that you have a button at the bottom of the screen that says MS Learn. You click it, and it &lt;strong&gt;opens a web page side-by-side to your exam&lt;/strong&gt; and you can freely search through it while answering your questions. Keep in mind, that you won’t be able to leave the MS Learn website. So if documentation points to GitHub, that link won’t work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mb820/microsoft-learn-1.png&quot; alt=&quot;MS Learn Button&quot; /&gt;
&lt;img src=&quot;/images/mb820/microsoft-learn-2.png&quot; alt=&quot;MS Learn side-by-side&quot; /&gt;
&lt;br /&gt;
&lt;em&gt;Screenshots are taken from MS Learn, not the actual exam&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So no need to memorize all available properties and triggers! &lt;em&gt;Yaaay!&lt;/em&gt; Thank you MS, now I’m more forgiving of »Googleable questions«. But if you’re like me, and you’ve always searched through MS Docs using Google, then take a minute to figure out how to search effectively using the Search option in Docs. That’s the only search option you’ll have. &lt;a href=&quot;https://twitter.com/KarolakNatalie&quot;&gt;Natalie&lt;/a&gt; has a good &lt;a href=&quot;https://nataliekarolak.wordpress.com/2023/09/05/bc-docs-search-vs-filter-by-title/&quot;&gt;post&lt;/a&gt; about searching docs effectively.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Be careful though&lt;/strong&gt;. MS Learn is a great help, but it’s not a substitute for exam prep. If you try to find the answer to every question in MS Learn, you can easily &lt;strong&gt;run out of the 2 hours&lt;/strong&gt; allotted for the exam.&lt;/p&gt;

&lt;p&gt;I’ll add here, that when I tried to close the MS Learn window, my whole exam crashed. But you can always message your proctor, and they simply restarted my exam from the last question I attempted. I didn’t lose any time due to the crash. This is not to scare you into not using MS Learn, but to emphasize, that even if something goes wrong, &lt;strong&gt;don’t worry, proctors are there to help you.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;question-topics-and-types&quot;&gt;Question Topics and Types&lt;/h3&gt;

&lt;p&gt;The questions do cover a wide area of topics, &lt;strong&gt;from telemetry, KQL, AppSource submissions, and ContainerHelper, to actual AL objects, data types, and permission sets&lt;/strong&gt;. &lt;a href=&quot;https://www.linkedin.com/in/alberto-soben-a91090162/&quot;&gt;Alberto&lt;/a&gt;  did a brilliant job &lt;strong&gt;attaching various links for each topic&lt;/strong&gt; that MS specified can be included in the exam. You can find the full list &lt;strong&gt;&lt;a href=&quot;https://businesscentralgeek.com/business-central-developer-certification-ultimate-guide&quot;&gt;here&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;When I was preparing, I went through exam areas and marked all where I didn’t feel comfortable. I then followed the MS Learning Paths covering those areas. Every learning path ends with a &lt;strong&gt;»Check your knowledge«&lt;/strong&gt; which gives you a feeling of what kind of questions to expect from that area.&lt;/p&gt;

&lt;p&gt;The questions come in 5 types:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Multiple choice with a single correct answer&lt;/li&gt;
  &lt;li&gt;Multiple choice with multiple correct answers&lt;/li&gt;
  &lt;li&gt;Snippet where you fill in the blanks from a selection&lt;/li&gt;
  &lt;li&gt;A selection of answers in the left column, and you have to select the correct answers and put them in order in the right column&lt;/li&gt;
  &lt;li&gt;A Yes/No question&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The exam always specifies how many answers are required. It will prevent you from selecting more answers than expected and it will notify you if you try to leave the question by selecting less than the required amount of answers. You can read more about different question types &lt;a href=&quot;https://learn.microsoft.com/en-us/credentials/support/exam-duration-exam-experience&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;review-later&quot;&gt;Review later&lt;/h3&gt;

&lt;p&gt;When you’re answering a question, you can mark it as »Review Later« and »Leave a Comment«. I suggest you use the Review Later one for any questions where you’re unsure about your answer. Once you get to the end of a section, you’ll get an overview of all answered, unanswered, marked as review, and marked as comment questions, and you can navigate quickly to the ones you’d like to take another look at.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mb820/mb820-review-qst.png&quot; alt=&quot;Mark Questions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/mb820/mb820-review-screen.png&quot; alt=&quot;Review Screen&quot; /&gt;
&lt;br /&gt;
&lt;em&gt;Screenshots are taken from MS Learn, not the actual exam&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Especially for people taking the Beta exam, mark the questions you are confused about and &lt;strong&gt;leave a comment for Microsoft.&lt;/strong&gt; Sure, it won’t do much for you, but at least people who are coming after you might have a better exam-taking experience.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;the-results&quot;&gt;The results&lt;/h3&gt;

&lt;p&gt;For anyone reading this &lt;strong&gt;after the exam is live&lt;/strong&gt; (no longer in Beta), you will get your results &lt;strong&gt;immediately&lt;/strong&gt;, and you’ll see how well you did in each area (Describe Business Central; Install, develop, and deploy for BC; …). For anyone taking the &lt;strong&gt;Beta exam&lt;/strong&gt;, we’ll get our results &lt;strong&gt;within 10 days from the day the Certification goes live&lt;/strong&gt; (goes out of beta). We don’t have a date yet when that’s supposed to be, but since the Beta discounts are valid until the 21st of February, I expect the exam to be live &lt;strong&gt;somewhere in March&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;my-take-away&quot;&gt;My take away&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MS Learn&lt;/strong&gt; really does help so we’re not tripping over questions that are a &lt;strong&gt;quick search away&lt;/strong&gt;. There were questions about data types I haven’t used in years, like &lt;strong&gt;XMLPorts&lt;/strong&gt;, but I could find what I needed in the documentation. Does it mean there are no “stupid” questions left? No, I was quite annoyed with some, especially the &lt;strong&gt;KQL-related&lt;/strong&gt; ones. But I left my comments, hopefully, they’ll be improved in the future. Overall, the exam was quite enjoyable for me, and I think it does try to capture development knowledge for the most part. At least it’s a &lt;strong&gt;starting point&lt;/strong&gt; that will improve and we now have a &lt;strong&gt;developer certification available&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And again, if you’ve been in the AL world for a while now, and you’ve worked on various projects, &lt;strong&gt;you got this&lt;/strong&gt;! 
Some preparation for areas you’re not too comfortable with, and you’re ready to go! &lt;strong&gt;Trust yourself&lt;/strong&gt;, you’ve done most of this before!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;For anyone reading this after taking the exam, have I missed anything? Is there something else, you wish you knew before taking it? Let me know, and I’ll add it. Help the next person get certified!&lt;/em&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Feb 2024 10:00:00 +0200</pubDate>
        <link>https://tine.staric.net/blog/2024/my-mb-820-experience/</link>
        <guid isPermaLink="true">https://tine.staric.net/blog/2024/my-mb-820-experience/</guid>
        
        
        <category>al</category>
        
      </item>
    
  </channel>
</rss>
